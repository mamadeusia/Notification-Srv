// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.1
// 	protoc        v3.12.4
// source: proto/NotificationSrv.proto

package NotificationSrv

import (
	timestamp "github.com/golang/protobuf/ptypes/timestamp"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type NotificationStatus int32

const (
	NotificationStatus_Read   NotificationStatus = 0
	NotificationStatus_UnRead NotificationStatus = 1
)

// Enum value maps for NotificationStatus.
var (
	NotificationStatus_name = map[int32]string{
		0: "Read",
		1: "UnRead",
	}
	NotificationStatus_value = map[string]int32{
		"Read":   0,
		"UnRead": 1,
	}
)

func (x NotificationStatus) Enum() *NotificationStatus {
	p := new(NotificationStatus)
	*p = x
	return p
}

func (x NotificationStatus) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (NotificationStatus) Descriptor() protoreflect.EnumDescriptor {
	return file_proto_NotificationSrv_proto_enumTypes[0].Descriptor()
}

func (NotificationStatus) Type() protoreflect.EnumType {
	return &file_proto_NotificationSrv_proto_enumTypes[0]
}

func (x NotificationStatus) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use NotificationStatus.Descriptor instead.
func (NotificationStatus) EnumDescriptor() ([]byte, []int) {
	return file_proto_NotificationSrv_proto_rawDescGZIP(), []int{0}
}

type StoredNotification struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ChatID    int64 `protobuf:"varint,1,opt,name=chatID,proto3" json:"chatID,omitempty"`
	MessageID int32 `protobuf:"varint,2,opt,name=messageID,proto3" json:"messageID,omitempty"`
}

func (x *StoredNotification) Reset() {
	*x = StoredNotification{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_NotificationSrv_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StoredNotification) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StoredNotification) ProtoMessage() {}

func (x *StoredNotification) ProtoReflect() protoreflect.Message {
	mi := &file_proto_NotificationSrv_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StoredNotification.ProtoReflect.Descriptor instead.
func (*StoredNotification) Descriptor() ([]byte, []int) {
	return file_proto_NotificationSrv_proto_rawDescGZIP(), []int{0}
}

func (x *StoredNotification) GetChatID() int64 {
	if x != nil {
		return x.ChatID
	}
	return 0
}

func (x *StoredNotification) GetMessageID() int32 {
	if x != nil {
		return x.MessageID
	}
	return 0
}

// Requester Message Types
type AdminAskQuestionDetails struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RequestID string `protobuf:"bytes,1,opt,name=requestID,proto3" json:"requestID,omitempty"`
	Question  string `protobuf:"bytes,2,opt,name=question,proto3" json:"question,omitempty"`
}

func (x *AdminAskQuestionDetails) Reset() {
	*x = AdminAskQuestionDetails{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_NotificationSrv_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AdminAskQuestionDetails) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AdminAskQuestionDetails) ProtoMessage() {}

func (x *AdminAskQuestionDetails) ProtoReflect() protoreflect.Message {
	mi := &file_proto_NotificationSrv_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AdminAskQuestionDetails.ProtoReflect.Descriptor instead.
func (*AdminAskQuestionDetails) Descriptor() ([]byte, []int) {
	return file_proto_NotificationSrv_proto_rawDescGZIP(), []int{1}
}

func (x *AdminAskQuestionDetails) GetRequestID() string {
	if x != nil {
		return x.RequestID
	}
	return ""
}

func (x *AdminAskQuestionDetails) GetQuestion() string {
	if x != nil {
		return x.Question
	}
	return ""
}

type RequestRejectedDetails struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Reason string               `protobuf:"bytes,1,opt,name=reason,proto3" json:"reason,omitempty"`
	Time   *timestamp.Timestamp `protobuf:"bytes,2,opt,name=time,proto3" json:"time,omitempty"`
}

func (x *RequestRejectedDetails) Reset() {
	*x = RequestRejectedDetails{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_NotificationSrv_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RequestRejectedDetails) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RequestRejectedDetails) ProtoMessage() {}

func (x *RequestRejectedDetails) ProtoReflect() protoreflect.Message {
	mi := &file_proto_NotificationSrv_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RequestRejectedDetails.ProtoReflect.Descriptor instead.
func (*RequestRejectedDetails) Descriptor() ([]byte, []int) {
	return file_proto_NotificationSrv_proto_rawDescGZIP(), []int{2}
}

func (x *RequestRejectedDetails) GetReason() string {
	if x != nil {
		return x.Reason
	}
	return ""
}

func (x *RequestRejectedDetails) GetTime() *timestamp.Timestamp {
	if x != nil {
		return x.Time
	}
	return nil
}

type RequestApprovedDetails struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Time *timestamp.Timestamp `protobuf:"bytes,1,opt,name=time,proto3" json:"time,omitempty"`
}

func (x *RequestApprovedDetails) Reset() {
	*x = RequestApprovedDetails{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_NotificationSrv_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RequestApprovedDetails) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RequestApprovedDetails) ProtoMessage() {}

func (x *RequestApprovedDetails) ProtoReflect() protoreflect.Message {
	mi := &file_proto_NotificationSrv_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RequestApprovedDetails.ProtoReflect.Descriptor instead.
func (*RequestApprovedDetails) Descriptor() ([]byte, []int) {
	return file_proto_NotificationSrv_proto_rawDescGZIP(), []int{3}
}

func (x *RequestApprovedDetails) GetTime() *timestamp.Timestamp {
	if x != nil {
		return x.Time
	}
	return nil
}

// it should not call unless we create a new service of questions
type ValidatorQuestionsDetails struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ValidatorQuestionIDs []string `protobuf:"bytes,1,rep,name=validatorQuestionIDs,proto3" json:"validatorQuestionIDs,omitempty"`
}

func (x *ValidatorQuestionsDetails) Reset() {
	*x = ValidatorQuestionsDetails{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_NotificationSrv_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ValidatorQuestionsDetails) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ValidatorQuestionsDetails) ProtoMessage() {}

func (x *ValidatorQuestionsDetails) ProtoReflect() protoreflect.Message {
	mi := &file_proto_NotificationSrv_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ValidatorQuestionsDetails.ProtoReflect.Descriptor instead.
func (*ValidatorQuestionsDetails) Descriptor() ([]byte, []int) {
	return file_proto_NotificationSrv_proto_rawDescGZIP(), []int{4}
}

func (x *ValidatorQuestionsDetails) GetValidatorQuestionIDs() []string {
	if x != nil {
		return x.ValidatorQuestionIDs
	}
	return nil
}

type CreateRequesterNotificationRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	From int64 `protobuf:"varint,1,opt,name=from,proto3" json:"from,omitempty"`
	To   int64 `protobuf:"varint,2,opt,name=to,proto3" json:"to,omitempty"`
	// Types that are assignable to MessageOneof:
	//
	//	*CreateRequesterNotificationRequest_AdminAskQuestionDetails
	//	*CreateRequesterNotificationRequest_RequestRejectedDetails
	//	*CreateRequesterNotificationRequest_RequestApprovedDetails
	//	*CreateRequesterNotificationRequest_ValidatorQuestionsDetails
	MessageOneof isCreateRequesterNotificationRequest_MessageOneof `protobuf_oneof:"message_oneof"`
}

func (x *CreateRequesterNotificationRequest) Reset() {
	*x = CreateRequesterNotificationRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_NotificationSrv_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateRequesterNotificationRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateRequesterNotificationRequest) ProtoMessage() {}

func (x *CreateRequesterNotificationRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_NotificationSrv_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateRequesterNotificationRequest.ProtoReflect.Descriptor instead.
func (*CreateRequesterNotificationRequest) Descriptor() ([]byte, []int) {
	return file_proto_NotificationSrv_proto_rawDescGZIP(), []int{5}
}

func (x *CreateRequesterNotificationRequest) GetFrom() int64 {
	if x != nil {
		return x.From
	}
	return 0
}

func (x *CreateRequesterNotificationRequest) GetTo() int64 {
	if x != nil {
		return x.To
	}
	return 0
}

func (m *CreateRequesterNotificationRequest) GetMessageOneof() isCreateRequesterNotificationRequest_MessageOneof {
	if m != nil {
		return m.MessageOneof
	}
	return nil
}

func (x *CreateRequesterNotificationRequest) GetAdminAskQuestionDetails() *AdminAskQuestionDetails {
	if x, ok := x.GetMessageOneof().(*CreateRequesterNotificationRequest_AdminAskQuestionDetails); ok {
		return x.AdminAskQuestionDetails
	}
	return nil
}

func (x *CreateRequesterNotificationRequest) GetRequestRejectedDetails() *RequestRejectedDetails {
	if x, ok := x.GetMessageOneof().(*CreateRequesterNotificationRequest_RequestRejectedDetails); ok {
		return x.RequestRejectedDetails
	}
	return nil
}

func (x *CreateRequesterNotificationRequest) GetRequestApprovedDetails() *RequestApprovedDetails {
	if x, ok := x.GetMessageOneof().(*CreateRequesterNotificationRequest_RequestApprovedDetails); ok {
		return x.RequestApprovedDetails
	}
	return nil
}

func (x *CreateRequesterNotificationRequest) GetValidatorQuestionsDetails() *ValidatorQuestionsDetails {
	if x, ok := x.GetMessageOneof().(*CreateRequesterNotificationRequest_ValidatorQuestionsDetails); ok {
		return x.ValidatorQuestionsDetails
	}
	return nil
}

type isCreateRequesterNotificationRequest_MessageOneof interface {
	isCreateRequesterNotificationRequest_MessageOneof()
}

type CreateRequesterNotificationRequest_AdminAskQuestionDetails struct {
	AdminAskQuestionDetails *AdminAskQuestionDetails `protobuf:"bytes,3,opt,name=adminAskQuestionDetails,proto3,oneof"`
}

type CreateRequesterNotificationRequest_RequestRejectedDetails struct {
	RequestRejectedDetails *RequestRejectedDetails `protobuf:"bytes,4,opt,name=requestRejectedDetails,proto3,oneof"`
}

type CreateRequesterNotificationRequest_RequestApprovedDetails struct {
	RequestApprovedDetails *RequestApprovedDetails `protobuf:"bytes,5,opt,name=requestApprovedDetails,proto3,oneof"`
}

type CreateRequesterNotificationRequest_ValidatorQuestionsDetails struct {
	ValidatorQuestionsDetails *ValidatorQuestionsDetails `protobuf:"bytes,6,opt,name=validatorQuestionsDetails,proto3,oneof"`
}

func (*CreateRequesterNotificationRequest_AdminAskQuestionDetails) isCreateRequesterNotificationRequest_MessageOneof() {
}

func (*CreateRequesterNotificationRequest_RequestRejectedDetails) isCreateRequesterNotificationRequest_MessageOneof() {
}

func (*CreateRequesterNotificationRequest_RequestApprovedDetails) isCreateRequesterNotificationRequest_MessageOneof() {
}

func (*CreateRequesterNotificationRequest_ValidatorQuestionsDetails) isCreateRequesterNotificationRequest_MessageOneof() {
}

type CreateRequesterNotificationResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Msg string `protobuf:"bytes,1,opt,name=msg,proto3" json:"msg,omitempty"`
}

func (x *CreateRequesterNotificationResponse) Reset() {
	*x = CreateRequesterNotificationResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_NotificationSrv_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateRequesterNotificationResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateRequesterNotificationResponse) ProtoMessage() {}

func (x *CreateRequesterNotificationResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_NotificationSrv_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateRequesterNotificationResponse.ProtoReflect.Descriptor instead.
func (*CreateRequesterNotificationResponse) Descriptor() ([]byte, []int) {
	return file_proto_NotificationSrv_proto_rawDescGZIP(), []int{6}
}

func (x *CreateRequesterNotificationResponse) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

type CreateBulkValidatorNotificationResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Msgs []string `protobuf:"bytes,1,rep,name=msgs,proto3" json:"msgs,omitempty"`
}

func (x *CreateBulkValidatorNotificationResponse) Reset() {
	*x = CreateBulkValidatorNotificationResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_NotificationSrv_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateBulkValidatorNotificationResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateBulkValidatorNotificationResponse) ProtoMessage() {}

func (x *CreateBulkValidatorNotificationResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_NotificationSrv_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateBulkValidatorNotificationResponse.ProtoReflect.Descriptor instead.
func (*CreateBulkValidatorNotificationResponse) Descriptor() ([]byte, []int) {
	return file_proto_NotificationSrv_proto_rawDescGZIP(), []int{7}
}

func (x *CreateBulkValidatorNotificationResponse) GetMsgs() []string {
	if x != nil {
		return x.Msgs
	}
	return nil
}

// Validator Message Types
type NearRequestFoundDetails struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RequestID string `protobuf:"bytes,1,opt,name=requestID,proto3" json:"requestID,omitempty"`
	FullName  string `protobuf:"bytes,2,opt,name=FullName,proto3" json:"FullName,omitempty"`
}

func (x *NearRequestFoundDetails) Reset() {
	*x = NearRequestFoundDetails{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_NotificationSrv_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NearRequestFoundDetails) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NearRequestFoundDetails) ProtoMessage() {}

func (x *NearRequestFoundDetails) ProtoReflect() protoreflect.Message {
	mi := &file_proto_NotificationSrv_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NearRequestFoundDetails.ProtoReflect.Descriptor instead.
func (*NearRequestFoundDetails) Descriptor() ([]byte, []int) {
	return file_proto_NotificationSrv_proto_rawDescGZIP(), []int{8}
}

func (x *NearRequestFoundDetails) GetRequestID() string {
	if x != nil {
		return x.RequestID
	}
	return ""
}

func (x *NearRequestFoundDetails) GetFullName() string {
	if x != nil {
		return x.FullName
	}
	return ""
}

type ElectedAsValidatorDetails struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RequesterFullName string `protobuf:"bytes,1,opt,name=RequesterFullName,proto3" json:"RequesterFullName,omitempty"`
}

func (x *ElectedAsValidatorDetails) Reset() {
	*x = ElectedAsValidatorDetails{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_NotificationSrv_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ElectedAsValidatorDetails) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ElectedAsValidatorDetails) ProtoMessage() {}

func (x *ElectedAsValidatorDetails) ProtoReflect() protoreflect.Message {
	mi := &file_proto_NotificationSrv_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ElectedAsValidatorDetails.ProtoReflect.Descriptor instead.
func (*ElectedAsValidatorDetails) Descriptor() ([]byte, []int) {
	return file_proto_NotificationSrv_proto_rawDescGZIP(), []int{9}
}

func (x *ElectedAsValidatorDetails) GetRequesterFullName() string {
	if x != nil {
		return x.RequesterFullName
	}
	return ""
}

type RequesterRespondToValidatorDetails struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RequestID           string                `protobuf:"bytes,1,opt,name=requestID,proto3" json:"requestID,omitempty"`
	StoredNotifications []*StoredNotification `protobuf:"bytes,2,rep,name=StoredNotifications,proto3" json:"StoredNotifications,omitempty"`
}

func (x *RequesterRespondToValidatorDetails) Reset() {
	*x = RequesterRespondToValidatorDetails{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_NotificationSrv_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RequesterRespondToValidatorDetails) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RequesterRespondToValidatorDetails) ProtoMessage() {}

func (x *RequesterRespondToValidatorDetails) ProtoReflect() protoreflect.Message {
	mi := &file_proto_NotificationSrv_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RequesterRespondToValidatorDetails.ProtoReflect.Descriptor instead.
func (*RequesterRespondToValidatorDetails) Descriptor() ([]byte, []int) {
	return file_proto_NotificationSrv_proto_rawDescGZIP(), []int{10}
}

func (x *RequesterRespondToValidatorDetails) GetRequestID() string {
	if x != nil {
		return x.RequestID
	}
	return ""
}

func (x *RequesterRespondToValidatorDetails) GetStoredNotifications() []*StoredNotification {
	if x != nil {
		return x.StoredNotifications
	}
	return nil
}

type CreateValidatorNotificationRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	From int64 `protobuf:"varint,1,opt,name=from,proto3" json:"from,omitempty"`
	To   int64 `protobuf:"varint,2,opt,name=to,proto3" json:"to,omitempty"`
	// Types that are assignable to MessageOneof:
	//
	//	*CreateValidatorNotificationRequest_NearRequestFoundDetails
	//	*CreateValidatorNotificationRequest_ElectedAsValidatorDetails
	//	*CreateValidatorNotificationRequest_RequesterRespondToValidatorDetails
	MessageOneof isCreateValidatorNotificationRequest_MessageOneof `protobuf_oneof:"message_oneof"`
}

func (x *CreateValidatorNotificationRequest) Reset() {
	*x = CreateValidatorNotificationRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_NotificationSrv_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateValidatorNotificationRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateValidatorNotificationRequest) ProtoMessage() {}

func (x *CreateValidatorNotificationRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_NotificationSrv_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateValidatorNotificationRequest.ProtoReflect.Descriptor instead.
func (*CreateValidatorNotificationRequest) Descriptor() ([]byte, []int) {
	return file_proto_NotificationSrv_proto_rawDescGZIP(), []int{11}
}

func (x *CreateValidatorNotificationRequest) GetFrom() int64 {
	if x != nil {
		return x.From
	}
	return 0
}

func (x *CreateValidatorNotificationRequest) GetTo() int64 {
	if x != nil {
		return x.To
	}
	return 0
}

func (m *CreateValidatorNotificationRequest) GetMessageOneof() isCreateValidatorNotificationRequest_MessageOneof {
	if m != nil {
		return m.MessageOneof
	}
	return nil
}

func (x *CreateValidatorNotificationRequest) GetNearRequestFoundDetails() *NearRequestFoundDetails {
	if x, ok := x.GetMessageOneof().(*CreateValidatorNotificationRequest_NearRequestFoundDetails); ok {
		return x.NearRequestFoundDetails
	}
	return nil
}

func (x *CreateValidatorNotificationRequest) GetElectedAsValidatorDetails() *ElectedAsValidatorDetails {
	if x, ok := x.GetMessageOneof().(*CreateValidatorNotificationRequest_ElectedAsValidatorDetails); ok {
		return x.ElectedAsValidatorDetails
	}
	return nil
}

func (x *CreateValidatorNotificationRequest) GetRequesterRespondToValidatorDetails() *RequesterRespondToValidatorDetails {
	if x, ok := x.GetMessageOneof().(*CreateValidatorNotificationRequest_RequesterRespondToValidatorDetails); ok {
		return x.RequesterRespondToValidatorDetails
	}
	return nil
}

type isCreateValidatorNotificationRequest_MessageOneof interface {
	isCreateValidatorNotificationRequest_MessageOneof()
}

type CreateValidatorNotificationRequest_NearRequestFoundDetails struct {
	NearRequestFoundDetails *NearRequestFoundDetails `protobuf:"bytes,3,opt,name=nearRequestFoundDetails,proto3,oneof"`
}

type CreateValidatorNotificationRequest_ElectedAsValidatorDetails struct {
	ElectedAsValidatorDetails *ElectedAsValidatorDetails `protobuf:"bytes,4,opt,name=electedAsValidatorDetails,proto3,oneof"`
}

type CreateValidatorNotificationRequest_RequesterRespondToValidatorDetails struct {
	RequesterRespondToValidatorDetails *RequesterRespondToValidatorDetails `protobuf:"bytes,5,opt,name=requesterRespondToValidatorDetails,proto3,oneof"`
}

func (*CreateValidatorNotificationRequest_NearRequestFoundDetails) isCreateValidatorNotificationRequest_MessageOneof() {
}

func (*CreateValidatorNotificationRequest_ElectedAsValidatorDetails) isCreateValidatorNotificationRequest_MessageOneof() {
}

func (*CreateValidatorNotificationRequest_RequesterRespondToValidatorDetails) isCreateValidatorNotificationRequest_MessageOneof() {
}

type CreateBulkValidatorNotificationRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CreateValidatorNotificationRequest []*CreateValidatorNotificationRequest `protobuf:"bytes,1,rep,name=createValidatorNotificationRequest,proto3" json:"createValidatorNotificationRequest,omitempty"`
}

func (x *CreateBulkValidatorNotificationRequest) Reset() {
	*x = CreateBulkValidatorNotificationRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_NotificationSrv_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateBulkValidatorNotificationRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateBulkValidatorNotificationRequest) ProtoMessage() {}

func (x *CreateBulkValidatorNotificationRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_NotificationSrv_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateBulkValidatorNotificationRequest.ProtoReflect.Descriptor instead.
func (*CreateBulkValidatorNotificationRequest) Descriptor() ([]byte, []int) {
	return file_proto_NotificationSrv_proto_rawDescGZIP(), []int{12}
}

func (x *CreateBulkValidatorNotificationRequest) GetCreateValidatorNotificationRequest() []*CreateValidatorNotificationRequest {
	if x != nil {
		return x.CreateValidatorNotificationRequest
	}
	return nil
}

type CreateValidatorNotificationResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Msg string `protobuf:"bytes,1,opt,name=msg,proto3" json:"msg,omitempty"`
}

func (x *CreateValidatorNotificationResponse) Reset() {
	*x = CreateValidatorNotificationResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_NotificationSrv_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateValidatorNotificationResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateValidatorNotificationResponse) ProtoMessage() {}

func (x *CreateValidatorNotificationResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_NotificationSrv_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateValidatorNotificationResponse.ProtoReflect.Descriptor instead.
func (*CreateValidatorNotificationResponse) Descriptor() ([]byte, []int) {
	return file_proto_NotificationSrv_proto_rawDescGZIP(), []int{13}
}

func (x *CreateValidatorNotificationResponse) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

// Notification Types . usefull when we want to get messages from notification service
type Notification struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id     string             `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	From   int64              `protobuf:"varint,2,opt,name=from,proto3" json:"from,omitempty"`
	To     int64              `protobuf:"varint,3,opt,name=to,proto3" json:"to,omitempty"`
	Status NotificationStatus `protobuf:"varint,4,opt,name=status,proto3,enum=NotificationSrv.NotificationStatus" json:"status,omitempty"`
	// Types that are assignable to MessageOneof:
	//
	//	*Notification_AdminAskQuestionDetails
	//	*Notification_RequestRejectedDetails
	//	*Notification_RequestApprovedDetails
	//	*Notification_ValidatorQuestionsDetails
	//	*Notification_NearRequestFoundDetails
	//	*Notification_ElectedAsValidatorDetails
	//	*Notification_RequesterRespondToValidatorDetails
	MessageOneof isNotification_MessageOneof `protobuf_oneof:"message_oneof"`
}

func (x *Notification) Reset() {
	*x = Notification{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_NotificationSrv_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Notification) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Notification) ProtoMessage() {}

func (x *Notification) ProtoReflect() protoreflect.Message {
	mi := &file_proto_NotificationSrv_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Notification.ProtoReflect.Descriptor instead.
func (*Notification) Descriptor() ([]byte, []int) {
	return file_proto_NotificationSrv_proto_rawDescGZIP(), []int{14}
}

func (x *Notification) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Notification) GetFrom() int64 {
	if x != nil {
		return x.From
	}
	return 0
}

func (x *Notification) GetTo() int64 {
	if x != nil {
		return x.To
	}
	return 0
}

func (x *Notification) GetStatus() NotificationStatus {
	if x != nil {
		return x.Status
	}
	return NotificationStatus_Read
}

func (m *Notification) GetMessageOneof() isNotification_MessageOneof {
	if m != nil {
		return m.MessageOneof
	}
	return nil
}

func (x *Notification) GetAdminAskQuestionDetails() *AdminAskQuestionDetails {
	if x, ok := x.GetMessageOneof().(*Notification_AdminAskQuestionDetails); ok {
		return x.AdminAskQuestionDetails
	}
	return nil
}

func (x *Notification) GetRequestRejectedDetails() *RequestRejectedDetails {
	if x, ok := x.GetMessageOneof().(*Notification_RequestRejectedDetails); ok {
		return x.RequestRejectedDetails
	}
	return nil
}

func (x *Notification) GetRequestApprovedDetails() *RequestApprovedDetails {
	if x, ok := x.GetMessageOneof().(*Notification_RequestApprovedDetails); ok {
		return x.RequestApprovedDetails
	}
	return nil
}

func (x *Notification) GetValidatorQuestionsDetails() *ValidatorQuestionsDetails {
	if x, ok := x.GetMessageOneof().(*Notification_ValidatorQuestionsDetails); ok {
		return x.ValidatorQuestionsDetails
	}
	return nil
}

func (x *Notification) GetNearRequestFoundDetails() *NearRequestFoundDetails {
	if x, ok := x.GetMessageOneof().(*Notification_NearRequestFoundDetails); ok {
		return x.NearRequestFoundDetails
	}
	return nil
}

func (x *Notification) GetElectedAsValidatorDetails() *ElectedAsValidatorDetails {
	if x, ok := x.GetMessageOneof().(*Notification_ElectedAsValidatorDetails); ok {
		return x.ElectedAsValidatorDetails
	}
	return nil
}

func (x *Notification) GetRequesterRespondToValidatorDetails() *RequesterRespondToValidatorDetails {
	if x, ok := x.GetMessageOneof().(*Notification_RequesterRespondToValidatorDetails); ok {
		return x.RequesterRespondToValidatorDetails
	}
	return nil
}

type isNotification_MessageOneof interface {
	isNotification_MessageOneof()
}

type Notification_AdminAskQuestionDetails struct {
	AdminAskQuestionDetails *AdminAskQuestionDetails `protobuf:"bytes,5,opt,name=adminAskQuestionDetails,proto3,oneof"`
}

type Notification_RequestRejectedDetails struct {
	RequestRejectedDetails *RequestRejectedDetails `protobuf:"bytes,6,opt,name=requestRejectedDetails,proto3,oneof"`
}

type Notification_RequestApprovedDetails struct {
	RequestApprovedDetails *RequestApprovedDetails `protobuf:"bytes,7,opt,name=requestApprovedDetails,proto3,oneof"`
}

type Notification_ValidatorQuestionsDetails struct {
	ValidatorQuestionsDetails *ValidatorQuestionsDetails `protobuf:"bytes,8,opt,name=validatorQuestionsDetails,proto3,oneof"`
}

type Notification_NearRequestFoundDetails struct {
	NearRequestFoundDetails *NearRequestFoundDetails `protobuf:"bytes,9,opt,name=nearRequestFoundDetails,proto3,oneof"`
}

type Notification_ElectedAsValidatorDetails struct {
	ElectedAsValidatorDetails *ElectedAsValidatorDetails `protobuf:"bytes,10,opt,name=electedAsValidatorDetails,proto3,oneof"`
}

type Notification_RequesterRespondToValidatorDetails struct {
	RequesterRespondToValidatorDetails *RequesterRespondToValidatorDetails `protobuf:"bytes,11,opt,name=requesterRespondToValidatorDetails,proto3,oneof"`
}

func (*Notification_AdminAskQuestionDetails) isNotification_MessageOneof() {}

func (*Notification_RequestRejectedDetails) isNotification_MessageOneof() {}

func (*Notification_RequestApprovedDetails) isNotification_MessageOneof() {}

func (*Notification_ValidatorQuestionsDetails) isNotification_MessageOneof() {}

func (*Notification_NearRequestFoundDetails) isNotification_MessageOneof() {}

func (*Notification_ElectedAsValidatorDetails) isNotification_MessageOneof() {}

func (*Notification_RequesterRespondToValidatorDetails) isNotification_MessageOneof() {}

type GetRequesterNotificationsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	To     int64 `protobuf:"varint,1,opt,name=to,proto3" json:"to,omitempty"`
	Limit  int64 `protobuf:"varint,2,opt,name=limit,proto3" json:"limit,omitempty"`
	Offset int64 `protobuf:"varint,3,opt,name=offset,proto3" json:"offset,omitempty"`
}

func (x *GetRequesterNotificationsRequest) Reset() {
	*x = GetRequesterNotificationsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_NotificationSrv_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetRequesterNotificationsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetRequesterNotificationsRequest) ProtoMessage() {}

func (x *GetRequesterNotificationsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_NotificationSrv_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetRequesterNotificationsRequest.ProtoReflect.Descriptor instead.
func (*GetRequesterNotificationsRequest) Descriptor() ([]byte, []int) {
	return file_proto_NotificationSrv_proto_rawDescGZIP(), []int{15}
}

func (x *GetRequesterNotificationsRequest) GetTo() int64 {
	if x != nil {
		return x.To
	}
	return 0
}

func (x *GetRequesterNotificationsRequest) GetLimit() int64 {
	if x != nil {
		return x.Limit
	}
	return 0
}

func (x *GetRequesterNotificationsRequest) GetOffset() int64 {
	if x != nil {
		return x.Offset
	}
	return 0
}

type GetRequesterNotificationsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Notifications []*Notification `protobuf:"bytes,1,rep,name=notifications,proto3" json:"notifications,omitempty"`
}

func (x *GetRequesterNotificationsResponse) Reset() {
	*x = GetRequesterNotificationsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_NotificationSrv_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetRequesterNotificationsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetRequesterNotificationsResponse) ProtoMessage() {}

func (x *GetRequesterNotificationsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_NotificationSrv_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetRequesterNotificationsResponse.ProtoReflect.Descriptor instead.
func (*GetRequesterNotificationsResponse) Descriptor() ([]byte, []int) {
	return file_proto_NotificationSrv_proto_rawDescGZIP(), []int{16}
}

func (x *GetRequesterNotificationsResponse) GetNotifications() []*Notification {
	if x != nil {
		return x.Notifications
	}
	return nil
}

type GetValidatorNotificationsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	To     int64 `protobuf:"varint,1,opt,name=to,proto3" json:"to,omitempty"`
	Limit  int64 `protobuf:"varint,2,opt,name=limit,proto3" json:"limit,omitempty"`
	Offset int64 `protobuf:"varint,3,opt,name=offset,proto3" json:"offset,omitempty"`
}

func (x *GetValidatorNotificationsRequest) Reset() {
	*x = GetValidatorNotificationsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_NotificationSrv_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetValidatorNotificationsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetValidatorNotificationsRequest) ProtoMessage() {}

func (x *GetValidatorNotificationsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_NotificationSrv_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetValidatorNotificationsRequest.ProtoReflect.Descriptor instead.
func (*GetValidatorNotificationsRequest) Descriptor() ([]byte, []int) {
	return file_proto_NotificationSrv_proto_rawDescGZIP(), []int{17}
}

func (x *GetValidatorNotificationsRequest) GetTo() int64 {
	if x != nil {
		return x.To
	}
	return 0
}

func (x *GetValidatorNotificationsRequest) GetLimit() int64 {
	if x != nil {
		return x.Limit
	}
	return 0
}

func (x *GetValidatorNotificationsRequest) GetOffset() int64 {
	if x != nil {
		return x.Offset
	}
	return 0
}

type GetValidatorNotificationsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Notifications []*Notification `protobuf:"bytes,1,rep,name=notifications,proto3" json:"notifications,omitempty"`
}

func (x *GetValidatorNotificationsResponse) Reset() {
	*x = GetValidatorNotificationsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_NotificationSrv_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetValidatorNotificationsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetValidatorNotificationsResponse) ProtoMessage() {}

func (x *GetValidatorNotificationsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_NotificationSrv_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetValidatorNotificationsResponse.ProtoReflect.Descriptor instead.
func (*GetValidatorNotificationsResponse) Descriptor() ([]byte, []int) {
	return file_proto_NotificationSrv_proto_rawDescGZIP(), []int{18}
}

func (x *GetValidatorNotificationsResponse) GetNotifications() []*Notification {
	if x != nil {
		return x.Notifications
	}
	return nil
}

// /
type GetRequesterUnreadNotificationsCountRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	To int64 `protobuf:"varint,1,opt,name=to,proto3" json:"to,omitempty"`
}

func (x *GetRequesterUnreadNotificationsCountRequest) Reset() {
	*x = GetRequesterUnreadNotificationsCountRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_NotificationSrv_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetRequesterUnreadNotificationsCountRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetRequesterUnreadNotificationsCountRequest) ProtoMessage() {}

func (x *GetRequesterUnreadNotificationsCountRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_NotificationSrv_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetRequesterUnreadNotificationsCountRequest.ProtoReflect.Descriptor instead.
func (*GetRequesterUnreadNotificationsCountRequest) Descriptor() ([]byte, []int) {
	return file_proto_NotificationSrv_proto_rawDescGZIP(), []int{19}
}

func (x *GetRequesterUnreadNotificationsCountRequest) GetTo() int64 {
	if x != nil {
		return x.To
	}
	return 0
}

type GetRequesterUnreadNotificationsCountResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Count int64 `protobuf:"varint,1,opt,name=count,proto3" json:"count,omitempty"`
}

func (x *GetRequesterUnreadNotificationsCountResponse) Reset() {
	*x = GetRequesterUnreadNotificationsCountResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_NotificationSrv_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetRequesterUnreadNotificationsCountResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetRequesterUnreadNotificationsCountResponse) ProtoMessage() {}

func (x *GetRequesterUnreadNotificationsCountResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_NotificationSrv_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetRequesterUnreadNotificationsCountResponse.ProtoReflect.Descriptor instead.
func (*GetRequesterUnreadNotificationsCountResponse) Descriptor() ([]byte, []int) {
	return file_proto_NotificationSrv_proto_rawDescGZIP(), []int{20}
}

func (x *GetRequesterUnreadNotificationsCountResponse) GetCount() int64 {
	if x != nil {
		return x.Count
	}
	return 0
}

type GetValidatorUnreadNotificationsCountRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	To int64 `protobuf:"varint,1,opt,name=to,proto3" json:"to,omitempty"`
}

func (x *GetValidatorUnreadNotificationsCountRequest) Reset() {
	*x = GetValidatorUnreadNotificationsCountRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_NotificationSrv_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetValidatorUnreadNotificationsCountRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetValidatorUnreadNotificationsCountRequest) ProtoMessage() {}

func (x *GetValidatorUnreadNotificationsCountRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_NotificationSrv_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetValidatorUnreadNotificationsCountRequest.ProtoReflect.Descriptor instead.
func (*GetValidatorUnreadNotificationsCountRequest) Descriptor() ([]byte, []int) {
	return file_proto_NotificationSrv_proto_rawDescGZIP(), []int{21}
}

func (x *GetValidatorUnreadNotificationsCountRequest) GetTo() int64 {
	if x != nil {
		return x.To
	}
	return 0
}

type GetValidatorUnreadNotificationsCountResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Count int64 `protobuf:"varint,1,opt,name=count,proto3" json:"count,omitempty"`
}

func (x *GetValidatorUnreadNotificationsCountResponse) Reset() {
	*x = GetValidatorUnreadNotificationsCountResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_NotificationSrv_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetValidatorUnreadNotificationsCountResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetValidatorUnreadNotificationsCountResponse) ProtoMessage() {}

func (x *GetValidatorUnreadNotificationsCountResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_NotificationSrv_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetValidatorUnreadNotificationsCountResponse.ProtoReflect.Descriptor instead.
func (*GetValidatorUnreadNotificationsCountResponse) Descriptor() ([]byte, []int) {
	return file_proto_NotificationSrv_proto_rawDescGZIP(), []int{22}
}

func (x *GetValidatorUnreadNotificationsCountResponse) GetCount() int64 {
	if x != nil {
		return x.Count
	}
	return 0
}

type MarkNotificationStatusAsReadRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *MarkNotificationStatusAsReadRequest) Reset() {
	*x = MarkNotificationStatusAsReadRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_NotificationSrv_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MarkNotificationStatusAsReadRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MarkNotificationStatusAsReadRequest) ProtoMessage() {}

func (x *MarkNotificationStatusAsReadRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_NotificationSrv_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MarkNotificationStatusAsReadRequest.ProtoReflect.Descriptor instead.
func (*MarkNotificationStatusAsReadRequest) Descriptor() ([]byte, []int) {
	return file_proto_NotificationSrv_proto_rawDescGZIP(), []int{23}
}

func (x *MarkNotificationStatusAsReadRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type MarkNotificationStatusAsReadResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Msg string `protobuf:"bytes,1,opt,name=msg,proto3" json:"msg,omitempty"`
}

func (x *MarkNotificationStatusAsReadResponse) Reset() {
	*x = MarkNotificationStatusAsReadResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_NotificationSrv_proto_msgTypes[24]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MarkNotificationStatusAsReadResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MarkNotificationStatusAsReadResponse) ProtoMessage() {}

func (x *MarkNotificationStatusAsReadResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_NotificationSrv_proto_msgTypes[24]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MarkNotificationStatusAsReadResponse.ProtoReflect.Descriptor instead.
func (*MarkNotificationStatusAsReadResponse) Descriptor() ([]byte, []int) {
	return file_proto_NotificationSrv_proto_rawDescGZIP(), []int{24}
}

func (x *MarkNotificationStatusAsReadResponse) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

type DescriptiveQuestionExamDetails struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Question string `protobuf:"bytes,1,opt,name=question,proto3" json:"question,omitempty"`
}

func (x *DescriptiveQuestionExamDetails) Reset() {
	*x = DescriptiveQuestionExamDetails{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_NotificationSrv_proto_msgTypes[25]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DescriptiveQuestionExamDetails) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DescriptiveQuestionExamDetails) ProtoMessage() {}

func (x *DescriptiveQuestionExamDetails) ProtoReflect() protoreflect.Message {
	mi := &file_proto_NotificationSrv_proto_msgTypes[25]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DescriptiveQuestionExamDetails.ProtoReflect.Descriptor instead.
func (*DescriptiveQuestionExamDetails) Descriptor() ([]byte, []int) {
	return file_proto_NotificationSrv_proto_rawDescGZIP(), []int{25}
}

func (x *DescriptiveQuestionExamDetails) GetQuestion() string {
	if x != nil {
		return x.Question
	}
	return ""
}

type MultipleChoiceQuestionExamDetails struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Question string   `protobuf:"bytes,1,opt,name=question,proto3" json:"question,omitempty"`
	Choices  []string `protobuf:"bytes,2,rep,name=choices,proto3" json:"choices,omitempty"`
}

func (x *MultipleChoiceQuestionExamDetails) Reset() {
	*x = MultipleChoiceQuestionExamDetails{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_NotificationSrv_proto_msgTypes[26]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MultipleChoiceQuestionExamDetails) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MultipleChoiceQuestionExamDetails) ProtoMessage() {}

func (x *MultipleChoiceQuestionExamDetails) ProtoReflect() protoreflect.Message {
	mi := &file_proto_NotificationSrv_proto_msgTypes[26]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MultipleChoiceQuestionExamDetails.ProtoReflect.Descriptor instead.
func (*MultipleChoiceQuestionExamDetails) Descriptor() ([]byte, []int) {
	return file_proto_NotificationSrv_proto_rawDescGZIP(), []int{26}
}

func (x *MultipleChoiceQuestionExamDetails) GetQuestion() string {
	if x != nil {
		return x.Question
	}
	return ""
}

func (x *MultipleChoiceQuestionExamDetails) GetChoices() []string {
	if x != nil {
		return x.Choices
	}
	return nil
}

type DescriptiveQuestionAnswerDetails struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Answer string `protobuf:"bytes,1,opt,name=answer,proto3" json:"answer,omitempty"`
}

func (x *DescriptiveQuestionAnswerDetails) Reset() {
	*x = DescriptiveQuestionAnswerDetails{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_NotificationSrv_proto_msgTypes[27]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DescriptiveQuestionAnswerDetails) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DescriptiveQuestionAnswerDetails) ProtoMessage() {}

func (x *DescriptiveQuestionAnswerDetails) ProtoReflect() protoreflect.Message {
	mi := &file_proto_NotificationSrv_proto_msgTypes[27]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DescriptiveQuestionAnswerDetails.ProtoReflect.Descriptor instead.
func (*DescriptiveQuestionAnswerDetails) Descriptor() ([]byte, []int) {
	return file_proto_NotificationSrv_proto_rawDescGZIP(), []int{27}
}

func (x *DescriptiveQuestionAnswerDetails) GetAnswer() string {
	if x != nil {
		return x.Answer
	}
	return ""
}

type MultipleChoiceQuestionAnswerDetails struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Index int32 `protobuf:"varint,1,opt,name=index,proto3" json:"index,omitempty"`
}

func (x *MultipleChoiceQuestionAnswerDetails) Reset() {
	*x = MultipleChoiceQuestionAnswerDetails{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_NotificationSrv_proto_msgTypes[28]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MultipleChoiceQuestionAnswerDetails) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MultipleChoiceQuestionAnswerDetails) ProtoMessage() {}

func (x *MultipleChoiceQuestionAnswerDetails) ProtoReflect() protoreflect.Message {
	mi := &file_proto_NotificationSrv_proto_msgTypes[28]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MultipleChoiceQuestionAnswerDetails.ProtoReflect.Descriptor instead.
func (*MultipleChoiceQuestionAnswerDetails) Descriptor() ([]byte, []int) {
	return file_proto_NotificationSrv_proto_rawDescGZIP(), []int{28}
}

func (x *MultipleChoiceQuestionAnswerDetails) GetIndex() int32 {
	if x != nil {
		return x.Index
	}
	return 0
}

type CreateValidatorQuestionRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RequestID   string `protobuf:"bytes,1,opt,name=requestID,proto3" json:"requestID,omitempty"`
	ValidatorID int64  `protobuf:"varint,2,opt,name=validatorID,proto3" json:"validatorID,omitempty"`
	RequesterID int64  `protobuf:"varint,3,opt,name=requesterID,proto3" json:"requesterID,omitempty"`
	// Types that are assignable to MessageOneof:
	//
	//	*CreateValidatorQuestionRequest_DescriptiveQuestionExamDetails
	//	*CreateValidatorQuestionRequest_MultipleChoiceQuestionExamDetails
	MessageOneof isCreateValidatorQuestionRequest_MessageOneof `protobuf_oneof:"message_oneof"`
}

func (x *CreateValidatorQuestionRequest) Reset() {
	*x = CreateValidatorQuestionRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_NotificationSrv_proto_msgTypes[29]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateValidatorQuestionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateValidatorQuestionRequest) ProtoMessage() {}

func (x *CreateValidatorQuestionRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_NotificationSrv_proto_msgTypes[29]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateValidatorQuestionRequest.ProtoReflect.Descriptor instead.
func (*CreateValidatorQuestionRequest) Descriptor() ([]byte, []int) {
	return file_proto_NotificationSrv_proto_rawDescGZIP(), []int{29}
}

func (x *CreateValidatorQuestionRequest) GetRequestID() string {
	if x != nil {
		return x.RequestID
	}
	return ""
}

func (x *CreateValidatorQuestionRequest) GetValidatorID() int64 {
	if x != nil {
		return x.ValidatorID
	}
	return 0
}

func (x *CreateValidatorQuestionRequest) GetRequesterID() int64 {
	if x != nil {
		return x.RequesterID
	}
	return 0
}

func (m *CreateValidatorQuestionRequest) GetMessageOneof() isCreateValidatorQuestionRequest_MessageOneof {
	if m != nil {
		return m.MessageOneof
	}
	return nil
}

func (x *CreateValidatorQuestionRequest) GetDescriptiveQuestionExamDetails() *DescriptiveQuestionExamDetails {
	if x, ok := x.GetMessageOneof().(*CreateValidatorQuestionRequest_DescriptiveQuestionExamDetails); ok {
		return x.DescriptiveQuestionExamDetails
	}
	return nil
}

func (x *CreateValidatorQuestionRequest) GetMultipleChoiceQuestionExamDetails() *MultipleChoiceQuestionExamDetails {
	if x, ok := x.GetMessageOneof().(*CreateValidatorQuestionRequest_MultipleChoiceQuestionExamDetails); ok {
		return x.MultipleChoiceQuestionExamDetails
	}
	return nil
}

type isCreateValidatorQuestionRequest_MessageOneof interface {
	isCreateValidatorQuestionRequest_MessageOneof()
}

type CreateValidatorQuestionRequest_DescriptiveQuestionExamDetails struct {
	DescriptiveQuestionExamDetails *DescriptiveQuestionExamDetails `protobuf:"bytes,4,opt,name=descriptiveQuestionExamDetails,proto3,oneof"`
}

type CreateValidatorQuestionRequest_MultipleChoiceQuestionExamDetails struct {
	MultipleChoiceQuestionExamDetails *MultipleChoiceQuestionExamDetails `protobuf:"bytes,5,opt,name=multipleChoiceQuestionExamDetails,proto3,oneof"`
}

func (*CreateValidatorQuestionRequest_DescriptiveQuestionExamDetails) isCreateValidatorQuestionRequest_MessageOneof() {
}

func (*CreateValidatorQuestionRequest_MultipleChoiceQuestionExamDetails) isCreateValidatorQuestionRequest_MessageOneof() {
}

type CreateBulkValidatorQuestionsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Questions []*CreateValidatorQuestionRequest `protobuf:"bytes,1,rep,name=questions,proto3" json:"questions,omitempty"`
}

func (x *CreateBulkValidatorQuestionsRequest) Reset() {
	*x = CreateBulkValidatorQuestionsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_NotificationSrv_proto_msgTypes[30]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateBulkValidatorQuestionsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateBulkValidatorQuestionsRequest) ProtoMessage() {}

func (x *CreateBulkValidatorQuestionsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_NotificationSrv_proto_msgTypes[30]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateBulkValidatorQuestionsRequest.ProtoReflect.Descriptor instead.
func (*CreateBulkValidatorQuestionsRequest) Descriptor() ([]byte, []int) {
	return file_proto_NotificationSrv_proto_rawDescGZIP(), []int{30}
}

func (x *CreateBulkValidatorQuestionsRequest) GetQuestions() []*CreateValidatorQuestionRequest {
	if x != nil {
		return x.Questions
	}
	return nil
}

type CreateBulkValidatorQuestionsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *CreateBulkValidatorQuestionsResponse) Reset() {
	*x = CreateBulkValidatorQuestionsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_NotificationSrv_proto_msgTypes[31]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateBulkValidatorQuestionsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateBulkValidatorQuestionsResponse) ProtoMessage() {}

func (x *CreateBulkValidatorQuestionsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_NotificationSrv_proto_msgTypes[31]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateBulkValidatorQuestionsResponse.ProtoReflect.Descriptor instead.
func (*CreateBulkValidatorQuestionsResponse) Descriptor() ([]byte, []int) {
	return file_proto_NotificationSrv_proto_rawDescGZIP(), []int{31}
}

// /
type SetValidatorQuestionAnswerRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	QuestionID string `protobuf:"bytes,1,opt,name=questionID,proto3" json:"questionID,omitempty"`
	// Types that are assignable to MessageOneof:
	//
	//	*SetValidatorQuestionAnswerRequest_DescriptiveQuestionAnswerDetails
	//	*SetValidatorQuestionAnswerRequest_MultipleChoiceQuestionAnswerDetails
	MessageOneof isSetValidatorQuestionAnswerRequest_MessageOneof `protobuf_oneof:"message_oneof"`
}

func (x *SetValidatorQuestionAnswerRequest) Reset() {
	*x = SetValidatorQuestionAnswerRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_NotificationSrv_proto_msgTypes[32]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SetValidatorQuestionAnswerRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetValidatorQuestionAnswerRequest) ProtoMessage() {}

func (x *SetValidatorQuestionAnswerRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_NotificationSrv_proto_msgTypes[32]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetValidatorQuestionAnswerRequest.ProtoReflect.Descriptor instead.
func (*SetValidatorQuestionAnswerRequest) Descriptor() ([]byte, []int) {
	return file_proto_NotificationSrv_proto_rawDescGZIP(), []int{32}
}

func (x *SetValidatorQuestionAnswerRequest) GetQuestionID() string {
	if x != nil {
		return x.QuestionID
	}
	return ""
}

func (m *SetValidatorQuestionAnswerRequest) GetMessageOneof() isSetValidatorQuestionAnswerRequest_MessageOneof {
	if m != nil {
		return m.MessageOneof
	}
	return nil
}

func (x *SetValidatorQuestionAnswerRequest) GetDescriptiveQuestionAnswerDetails() *DescriptiveQuestionAnswerDetails {
	if x, ok := x.GetMessageOneof().(*SetValidatorQuestionAnswerRequest_DescriptiveQuestionAnswerDetails); ok {
		return x.DescriptiveQuestionAnswerDetails
	}
	return nil
}

func (x *SetValidatorQuestionAnswerRequest) GetMultipleChoiceQuestionAnswerDetails() *MultipleChoiceQuestionAnswerDetails {
	if x, ok := x.GetMessageOneof().(*SetValidatorQuestionAnswerRequest_MultipleChoiceQuestionAnswerDetails); ok {
		return x.MultipleChoiceQuestionAnswerDetails
	}
	return nil
}

type isSetValidatorQuestionAnswerRequest_MessageOneof interface {
	isSetValidatorQuestionAnswerRequest_MessageOneof()
}

type SetValidatorQuestionAnswerRequest_DescriptiveQuestionAnswerDetails struct {
	DescriptiveQuestionAnswerDetails *DescriptiveQuestionAnswerDetails `protobuf:"bytes,2,opt,name=descriptiveQuestionAnswerDetails,proto3,oneof"`
}

type SetValidatorQuestionAnswerRequest_MultipleChoiceQuestionAnswerDetails struct {
	MultipleChoiceQuestionAnswerDetails *MultipleChoiceQuestionAnswerDetails `protobuf:"bytes,3,opt,name=multipleChoiceQuestionAnswerDetails,proto3,oneof"`
}

func (*SetValidatorQuestionAnswerRequest_DescriptiveQuestionAnswerDetails) isSetValidatorQuestionAnswerRequest_MessageOneof() {
}

func (*SetValidatorQuestionAnswerRequest_MultipleChoiceQuestionAnswerDetails) isSetValidatorQuestionAnswerRequest_MessageOneof() {
}

type SetValidatorQuestionAnswerResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Msg string `protobuf:"bytes,1,opt,name=msg,proto3" json:"msg,omitempty"`
}

func (x *SetValidatorQuestionAnswerResponse) Reset() {
	*x = SetValidatorQuestionAnswerResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_NotificationSrv_proto_msgTypes[33]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SetValidatorQuestionAnswerResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetValidatorQuestionAnswerResponse) ProtoMessage() {}

func (x *SetValidatorQuestionAnswerResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_NotificationSrv_proto_msgTypes[33]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetValidatorQuestionAnswerResponse.ProtoReflect.Descriptor instead.
func (*SetValidatorQuestionAnswerResponse) Descriptor() ([]byte, []int) {
	return file_proto_NotificationSrv_proto_rawDescGZIP(), []int{33}
}

func (x *SetValidatorQuestionAnswerResponse) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

type GetQuestionExamByIDRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *GetQuestionExamByIDRequest) Reset() {
	*x = GetQuestionExamByIDRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_NotificationSrv_proto_msgTypes[34]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetQuestionExamByIDRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetQuestionExamByIDRequest) ProtoMessage() {}

func (x *GetQuestionExamByIDRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_NotificationSrv_proto_msgTypes[34]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetQuestionExamByIDRequest.ProtoReflect.Descriptor instead.
func (*GetQuestionExamByIDRequest) Descriptor() ([]byte, []int) {
	return file_proto_NotificationSrv_proto_rawDescGZIP(), []int{34}
}

func (x *GetQuestionExamByIDRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

// we have to hide validatorID for requesterBot
type GetQuestionExamByIDResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	QuestionID  string `protobuf:"bytes,1,opt,name=questionID,proto3" json:"questionID,omitempty"`
	RequestID   string `protobuf:"bytes,2,opt,name=requestID,proto3" json:"requestID,omitempty"`
	RequesterID int64  `protobuf:"varint,3,opt,name=requesterID,proto3" json:"requesterID,omitempty"`
	// Types that are assignable to MessageOneof:
	//
	//	*GetQuestionExamByIDResponse_DescriptiveQuestionExamDetails
	//	*GetQuestionExamByIDResponse_MultipleChoiceQuestionExamDetails
	MessageOneof isGetQuestionExamByIDResponse_MessageOneof `protobuf_oneof:"message_oneof"`
}

func (x *GetQuestionExamByIDResponse) Reset() {
	*x = GetQuestionExamByIDResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_NotificationSrv_proto_msgTypes[35]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetQuestionExamByIDResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetQuestionExamByIDResponse) ProtoMessage() {}

func (x *GetQuestionExamByIDResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_NotificationSrv_proto_msgTypes[35]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetQuestionExamByIDResponse.ProtoReflect.Descriptor instead.
func (*GetQuestionExamByIDResponse) Descriptor() ([]byte, []int) {
	return file_proto_NotificationSrv_proto_rawDescGZIP(), []int{35}
}

func (x *GetQuestionExamByIDResponse) GetQuestionID() string {
	if x != nil {
		return x.QuestionID
	}
	return ""
}

func (x *GetQuestionExamByIDResponse) GetRequestID() string {
	if x != nil {
		return x.RequestID
	}
	return ""
}

func (x *GetQuestionExamByIDResponse) GetRequesterID() int64 {
	if x != nil {
		return x.RequesterID
	}
	return 0
}

func (m *GetQuestionExamByIDResponse) GetMessageOneof() isGetQuestionExamByIDResponse_MessageOneof {
	if m != nil {
		return m.MessageOneof
	}
	return nil
}

func (x *GetQuestionExamByIDResponse) GetDescriptiveQuestionExamDetails() *DescriptiveQuestionExamDetails {
	if x, ok := x.GetMessageOneof().(*GetQuestionExamByIDResponse_DescriptiveQuestionExamDetails); ok {
		return x.DescriptiveQuestionExamDetails
	}
	return nil
}

func (x *GetQuestionExamByIDResponse) GetMultipleChoiceQuestionExamDetails() *MultipleChoiceQuestionExamDetails {
	if x, ok := x.GetMessageOneof().(*GetQuestionExamByIDResponse_MultipleChoiceQuestionExamDetails); ok {
		return x.MultipleChoiceQuestionExamDetails
	}
	return nil
}

type isGetQuestionExamByIDResponse_MessageOneof interface {
	isGetQuestionExamByIDResponse_MessageOneof()
}

type GetQuestionExamByIDResponse_DescriptiveQuestionExamDetails struct {
	DescriptiveQuestionExamDetails *DescriptiveQuestionExamDetails `protobuf:"bytes,4,opt,name=descriptiveQuestionExamDetails,proto3,oneof"`
}

type GetQuestionExamByIDResponse_MultipleChoiceQuestionExamDetails struct {
	MultipleChoiceQuestionExamDetails *MultipleChoiceQuestionExamDetails `protobuf:"bytes,5,opt,name=multipleChoiceQuestionExamDetails,proto3,oneof"`
}

func (*GetQuestionExamByIDResponse_DescriptiveQuestionExamDetails) isGetQuestionExamByIDResponse_MessageOneof() {
}

func (*GetQuestionExamByIDResponse_MultipleChoiceQuestionExamDetails) isGetQuestionExamByIDResponse_MessageOneof() {
}

var File_proto_NotificationSrv_proto protoreflect.FileDescriptor

var file_proto_NotificationSrv_proto_rawDesc = []byte{
	0x0a, 0x1b, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x53, 0x72, 0x76, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0f, 0x4e,
	0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x72, 0x76, 0x1a, 0x1f,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f,
	0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22,
	0x4a, 0x0a, 0x12, 0x53, 0x74, 0x6f, 0x72, 0x65, 0x64, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x16, 0x0a, 0x06, 0x63, 0x68, 0x61, 0x74, 0x49, 0x44, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x63, 0x68, 0x61, 0x74, 0x49, 0x44, 0x12, 0x1c, 0x0a,
	0x09, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x49, 0x44, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x09, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x49, 0x44, 0x22, 0x53, 0x0a, 0x17, 0x41,
	0x64, 0x6d, 0x69, 0x6e, 0x41, 0x73, 0x6b, 0x51, 0x75, 0x65, 0x73, 0x74, 0x69, 0x6f, 0x6e, 0x44,
	0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x12, 0x1c, 0x0a, 0x09, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x72, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x49, 0x44, 0x12, 0x1a, 0x0a, 0x08, 0x71, 0x75, 0x65, 0x73, 0x74, 0x69, 0x6f, 0x6e,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x71, 0x75, 0x65, 0x73, 0x74, 0x69, 0x6f, 0x6e,
	0x22, 0x60, 0x0a, 0x16, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x52, 0x65, 0x6a, 0x65, 0x63,
	0x74, 0x65, 0x64, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65,
	0x61, 0x73, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x72, 0x65, 0x61, 0x73,
	0x6f, 0x6e, 0x12, 0x2e, 0x0a, 0x04, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62,
	0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x04, 0x74, 0x69,
	0x6d, 0x65, 0x22, 0x48, 0x0a, 0x16, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x41, 0x70, 0x70,
	0x72, 0x6f, 0x76, 0x65, 0x64, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x12, 0x2e, 0x0a, 0x04,
	0x74, 0x69, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d,
	0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x04, 0x74, 0x69, 0x6d, 0x65, 0x22, 0x4f, 0x0a, 0x19,
	0x56, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x6f, 0x72, 0x51, 0x75, 0x65, 0x73, 0x74, 0x69, 0x6f,
	0x6e, 0x73, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x12, 0x32, 0x0a, 0x14, 0x76, 0x61, 0x6c,
	0x69, 0x64, 0x61, 0x74, 0x6f, 0x72, 0x51, 0x75, 0x65, 0x73, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x44,
	0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x14, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74,
	0x6f, 0x72, 0x51, 0x75, 0x65, 0x73, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x44, 0x73, 0x22, 0xf1, 0x03,
	0x0a, 0x22, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x65,
	0x72, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x66, 0x72, 0x6f, 0x6d, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x04, 0x66, 0x72, 0x6f, 0x6d, 0x12, 0x0e, 0x0a, 0x02, 0x74, 0x6f, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x74, 0x6f, 0x12, 0x64, 0x0a, 0x17, 0x61, 0x64, 0x6d, 0x69,
	0x6e, 0x41, 0x73, 0x6b, 0x51, 0x75, 0x65, 0x73, 0x74, 0x69, 0x6f, 0x6e, 0x44, 0x65, 0x74, 0x61,
	0x69, 0x6c, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x28, 0x2e, 0x4e, 0x6f, 0x74, 0x69,
	0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x72, 0x76, 0x2e, 0x41, 0x64, 0x6d, 0x69,
	0x6e, 0x41, 0x73, 0x6b, 0x51, 0x75, 0x65, 0x73, 0x74, 0x69, 0x6f, 0x6e, 0x44, 0x65, 0x74, 0x61,
	0x69, 0x6c, 0x73, 0x48, 0x00, 0x52, 0x17, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x41, 0x73, 0x6b, 0x51,
	0x75, 0x65, 0x73, 0x74, 0x69, 0x6f, 0x6e, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x12, 0x61,
	0x0a, 0x16, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x52, 0x65, 0x6a, 0x65, 0x63, 0x74, 0x65,
	0x64, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x27,
	0x2e, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x72, 0x76,
	0x2e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x52, 0x65, 0x6a, 0x65, 0x63, 0x74, 0x65, 0x64,
	0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x48, 0x00, 0x52, 0x16, 0x72, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x52, 0x65, 0x6a, 0x65, 0x63, 0x74, 0x65, 0x64, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c,
	0x73, 0x12, 0x61, 0x0a, 0x16, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x41, 0x70, 0x70, 0x72,
	0x6f, 0x76, 0x65, 0x64, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x27, 0x2e, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x53, 0x72, 0x76, 0x2e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x41, 0x70, 0x70, 0x72, 0x6f,
	0x76, 0x65, 0x64, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x48, 0x00, 0x52, 0x16, 0x72, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x41, 0x70, 0x70, 0x72, 0x6f, 0x76, 0x65, 0x64, 0x44, 0x65, 0x74,
	0x61, 0x69, 0x6c, 0x73, 0x12, 0x6a, 0x0a, 0x19, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x6f,
	0x72, 0x51, 0x75, 0x65, 0x73, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c,
	0x73, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2a, 0x2e, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69,
	0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x72, 0x76, 0x2e, 0x56, 0x61, 0x6c, 0x69, 0x64, 0x61,
	0x74, 0x6f, 0x72, 0x51, 0x75, 0x65, 0x73, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x44, 0x65, 0x74, 0x61,
	0x69, 0x6c, 0x73, 0x48, 0x00, 0x52, 0x19, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x6f, 0x72,
	0x51, 0x75, 0x65, 0x73, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73,
	0x42, 0x0f, 0x0a, 0x0d, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x5f, 0x6f, 0x6e, 0x65, 0x6f,
	0x66, 0x22, 0x37, 0x0a, 0x23, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x65, 0x72, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x6d, 0x73, 0x67, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6d, 0x73, 0x67, 0x22, 0x3d, 0x0a, 0x27, 0x43, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x42, 0x75, 0x6c, 0x6b, 0x56, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x6f,
	0x72, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x6d, 0x73, 0x67, 0x73, 0x18, 0x01, 0x20,
	0x03, 0x28, 0x09, 0x52, 0x04, 0x6d, 0x73, 0x67, 0x73, 0x22, 0x53, 0x0a, 0x17, 0x4e, 0x65, 0x61,
	0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x46, 0x6f, 0x75, 0x6e, 0x64, 0x44, 0x65, 0x74,
	0x61, 0x69, 0x6c, 0x73, 0x12, 0x1c, 0x0a, 0x09, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x49,
	0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x49, 0x44, 0x12, 0x1a, 0x0a, 0x08, 0x46, 0x75, 0x6c, 0x6c, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x46, 0x75, 0x6c, 0x6c, 0x4e, 0x61, 0x6d, 0x65, 0x22, 0x49,
	0x0a, 0x19, 0x45, 0x6c, 0x65, 0x63, 0x74, 0x65, 0x64, 0x41, 0x73, 0x56, 0x61, 0x6c, 0x69, 0x64,
	0x61, 0x74, 0x6f, 0x72, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x12, 0x2c, 0x0a, 0x11, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x65, 0x72, 0x46, 0x75, 0x6c, 0x6c, 0x4e, 0x61, 0x6d, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x11, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x65,
	0x72, 0x46, 0x75, 0x6c, 0x6c, 0x4e, 0x61, 0x6d, 0x65, 0x22, 0x99, 0x01, 0x0a, 0x22, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x64, 0x54, 0x6f,
	0x56, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x6f, 0x72, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73,
	0x12, 0x1c, 0x0a, 0x09, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x49, 0x44, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x09, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x49, 0x44, 0x12, 0x55,
	0x0a, 0x13, 0x53, 0x74, 0x6f, 0x72, 0x65, 0x64, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x23, 0x2e, 0x4e, 0x6f,
	0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x72, 0x76, 0x2e, 0x53, 0x74,
	0x6f, 0x72, 0x65, 0x64, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x52, 0x13, 0x53, 0x74, 0x6f, 0x72, 0x65, 0x64, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x73, 0x22, 0xb3, 0x03, 0x0a, 0x22, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x56, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x6f, 0x72, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04,
	0x66, 0x72, 0x6f, 0x6d, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x66, 0x72, 0x6f, 0x6d,
	0x12, 0x0e, 0x0a, 0x02, 0x74, 0x6f, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x74, 0x6f,
	0x12, 0x64, 0x0a, 0x17, 0x6e, 0x65, 0x61, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x46,
	0x6f, 0x75, 0x6e, 0x64, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x28, 0x2e, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x53, 0x72, 0x76, 0x2e, 0x4e, 0x65, 0x61, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x46,
	0x6f, 0x75, 0x6e, 0x64, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x48, 0x00, 0x52, 0x17, 0x6e,
	0x65, 0x61, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x46, 0x6f, 0x75, 0x6e, 0x64, 0x44,
	0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x12, 0x6a, 0x0a, 0x19, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x65,
	0x64, 0x41, 0x73, 0x56, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x6f, 0x72, 0x44, 0x65, 0x74, 0x61,
	0x69, 0x6c, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2a, 0x2e, 0x4e, 0x6f, 0x74, 0x69,
	0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x72, 0x76, 0x2e, 0x45, 0x6c, 0x65, 0x63,
	0x74, 0x65, 0x64, 0x41, 0x73, 0x56, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x6f, 0x72, 0x44, 0x65,
	0x74, 0x61, 0x69, 0x6c, 0x73, 0x48, 0x00, 0x52, 0x19, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x65, 0x64,
	0x41, 0x73, 0x56, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x6f, 0x72, 0x44, 0x65, 0x74, 0x61, 0x69,
	0x6c, 0x73, 0x12, 0x85, 0x01, 0x0a, 0x22, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x65, 0x72,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x64, 0x54, 0x6f, 0x56, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74,
	0x6f, 0x72, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x33, 0x2e, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x72,
	0x76, 0x2e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x64, 0x54, 0x6f, 0x56, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x6f, 0x72, 0x44, 0x65, 0x74,
	0x61, 0x69, 0x6c, 0x73, 0x48, 0x00, 0x52, 0x22, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x65,
	0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x64, 0x54, 0x6f, 0x56, 0x61, 0x6c, 0x69, 0x64, 0x61,
	0x74, 0x6f, 0x72, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x42, 0x0f, 0x0a, 0x0d, 0x6d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x5f, 0x6f, 0x6e, 0x65, 0x6f, 0x66, 0x22, 0xae, 0x01, 0x0a, 0x26,
	0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x42, 0x75, 0x6c, 0x6b, 0x56, 0x61, 0x6c, 0x69, 0x64, 0x61,
	0x74, 0x6f, 0x72, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x83, 0x01, 0x0a, 0x22, 0x63, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x56, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x6f, 0x72, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69,
	0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x18, 0x01, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x33, 0x2e, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x53, 0x72, 0x76, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x56, 0x61, 0x6c, 0x69,
	0x64, 0x61, 0x74, 0x6f, 0x72, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x52, 0x22, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x56, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x6f, 0x72, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x37, 0x0a, 0x23,
	0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x56, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x6f, 0x72, 0x4e,
	0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x6d, 0x73, 0x67, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x03, 0x6d, 0x73, 0x67, 0x22, 0x82, 0x07, 0x0a, 0x0c, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69,
	0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x66, 0x72, 0x6f, 0x6d, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x66, 0x72, 0x6f, 0x6d, 0x12, 0x0e, 0x0a, 0x02, 0x74, 0x6f,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x74, 0x6f, 0x12, 0x3b, 0x0a, 0x06, 0x73, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x23, 0x2e, 0x4e, 0x6f, 0x74,
	0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x72, 0x76, 0x2e, 0x4e, 0x6f, 0x74,
	0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52,
	0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x64, 0x0a, 0x17, 0x61, 0x64, 0x6d, 0x69, 0x6e,
	0x41, 0x73, 0x6b, 0x51, 0x75, 0x65, 0x73, 0x74, 0x69, 0x6f, 0x6e, 0x44, 0x65, 0x74, 0x61, 0x69,
	0x6c, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x28, 0x2e, 0x4e, 0x6f, 0x74, 0x69, 0x66,
	0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x72, 0x76, 0x2e, 0x41, 0x64, 0x6d, 0x69, 0x6e,
	0x41, 0x73, 0x6b, 0x51, 0x75, 0x65, 0x73, 0x74, 0x69, 0x6f, 0x6e, 0x44, 0x65, 0x74, 0x61, 0x69,
	0x6c, 0x73, 0x48, 0x00, 0x52, 0x17, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x41, 0x73, 0x6b, 0x51, 0x75,
	0x65, 0x73, 0x74, 0x69, 0x6f, 0x6e, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x12, 0x61, 0x0a,
	0x16, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x52, 0x65, 0x6a, 0x65, 0x63, 0x74, 0x65, 0x64,
	0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x27, 0x2e,
	0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x72, 0x76, 0x2e,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x52, 0x65, 0x6a, 0x65, 0x63, 0x74, 0x65, 0x64, 0x44,
	0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x48, 0x00, 0x52, 0x16, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x52, 0x65, 0x6a, 0x65, 0x63, 0x74, 0x65, 0x64, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73,
	0x12, 0x61, 0x0a, 0x16, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x41, 0x70, 0x70, 0x72, 0x6f,
	0x76, 0x65, 0x64, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x27, 0x2e, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x53,
	0x72, 0x76, 0x2e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x41, 0x70, 0x70, 0x72, 0x6f, 0x76,
	0x65, 0x64, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x48, 0x00, 0x52, 0x16, 0x72, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x41, 0x70, 0x70, 0x72, 0x6f, 0x76, 0x65, 0x64, 0x44, 0x65, 0x74, 0x61,
	0x69, 0x6c, 0x73, 0x12, 0x6a, 0x0a, 0x19, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x6f, 0x72,
	0x51, 0x75, 0x65, 0x73, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73,
	0x18, 0x08, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2a, 0x2e, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x72, 0x76, 0x2e, 0x56, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74,
	0x6f, 0x72, 0x51, 0x75, 0x65, 0x73, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x44, 0x65, 0x74, 0x61, 0x69,
	0x6c, 0x73, 0x48, 0x00, 0x52, 0x19, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x6f, 0x72, 0x51,
	0x75, 0x65, 0x73, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x12,
	0x64, 0x0a, 0x17, 0x6e, 0x65, 0x61, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x46, 0x6f,
	0x75, 0x6e, 0x64, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x28, 0x2e, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x53,
	0x72, 0x76, 0x2e, 0x4e, 0x65, 0x61, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x46, 0x6f,
	0x75, 0x6e, 0x64, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x48, 0x00, 0x52, 0x17, 0x6e, 0x65,
	0x61, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x46, 0x6f, 0x75, 0x6e, 0x64, 0x44, 0x65,
	0x74, 0x61, 0x69, 0x6c, 0x73, 0x12, 0x6a, 0x0a, 0x19, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x65, 0x64,
	0x41, 0x73, 0x56, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x6f, 0x72, 0x44, 0x65, 0x74, 0x61, 0x69,
	0x6c, 0x73, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2a, 0x2e, 0x4e, 0x6f, 0x74, 0x69, 0x66,
	0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x72, 0x76, 0x2e, 0x45, 0x6c, 0x65, 0x63, 0x74,
	0x65, 0x64, 0x41, 0x73, 0x56, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x6f, 0x72, 0x44, 0x65, 0x74,
	0x61, 0x69, 0x6c, 0x73, 0x48, 0x00, 0x52, 0x19, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x65, 0x64, 0x41,
	0x73, 0x56, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x6f, 0x72, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c,
	0x73, 0x12, 0x85, 0x01, 0x0a, 0x22, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x65, 0x72, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x64, 0x54, 0x6f, 0x56, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x6f,
	0x72, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x33,
	0x2e, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x72, 0x76,
	0x2e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x64, 0x54, 0x6f, 0x56, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x6f, 0x72, 0x44, 0x65, 0x74, 0x61,
	0x69, 0x6c, 0x73, 0x48, 0x00, 0x52, 0x22, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x65, 0x72,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x64, 0x54, 0x6f, 0x56, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74,
	0x6f, 0x72, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x42, 0x0f, 0x0a, 0x0d, 0x6d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x5f, 0x6f, 0x6e, 0x65, 0x6f, 0x66, 0x22, 0x60, 0x0a, 0x20, 0x47, 0x65,
	0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x65, 0x72, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69,
	0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e,
	0x0a, 0x02, 0x74, 0x6f, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x74, 0x6f, 0x12, 0x14,
	0x0a, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x6c,
	0x69, 0x6d, 0x69, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x6f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x6f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x22, 0x68, 0x0a, 0x21,
	0x47, 0x65, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x65, 0x72, 0x4e, 0x6f, 0x74, 0x69,
	0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x43, 0x0a, 0x0d, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x4e, 0x6f, 0x74, 0x69, 0x66,
	0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x72, 0x76, 0x2e, 0x4e, 0x6f, 0x74, 0x69, 0x66,
	0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x0d, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x22, 0x60, 0x0a, 0x20, 0x47, 0x65, 0x74, 0x56, 0x61, 0x6c,
	0x69, 0x64, 0x61, 0x74, 0x6f, 0x72, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x74, 0x6f,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x74, 0x6f, 0x12, 0x14, 0x0a, 0x05, 0x6c, 0x69,
	0x6d, 0x69, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74,
	0x12, 0x16, 0x0a, 0x06, 0x6f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x06, 0x6f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x22, 0x68, 0x0a, 0x21, 0x47, 0x65, 0x74, 0x56,
	0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x6f, 0x72, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x43, 0x0a,
	0x0d, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x01,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x53, 0x72, 0x76, 0x2e, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x52, 0x0d, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x73, 0x22, 0x3d, 0x0a, 0x2b, 0x47, 0x65, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x65, 0x72, 0x55, 0x6e, 0x72, 0x65, 0x61, 0x64, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x73, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x0e, 0x0a, 0x02, 0x74, 0x6f, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x74,
	0x6f, 0x22, 0x44, 0x0a, 0x2c, 0x47, 0x65, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x65,
	0x72, 0x55, 0x6e, 0x72, 0x65, 0x61, 0x64, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x73, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x14, 0x0a, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x22, 0x3d, 0x0a, 0x2b, 0x47, 0x65, 0x74, 0x56, 0x61,
	0x6c, 0x69, 0x64, 0x61, 0x74, 0x6f, 0x72, 0x55, 0x6e, 0x72, 0x65, 0x61, 0x64, 0x4e, 0x6f, 0x74,
	0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x74, 0x6f, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x02, 0x74, 0x6f, 0x22, 0x44, 0x0a, 0x2c, 0x47, 0x65, 0x74, 0x56, 0x61, 0x6c,
	0x69, 0x64, 0x61, 0x74, 0x6f, 0x72, 0x55, 0x6e, 0x72, 0x65, 0x61, 0x64, 0x4e, 0x6f, 0x74, 0x69,
	0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x22, 0x35, 0x0a, 0x23,
	0x4d, 0x61, 0x72, 0x6b, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x41, 0x73, 0x52, 0x65, 0x61, 0x64, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x02, 0x69, 0x64, 0x22, 0x38, 0x0a, 0x24, 0x4d, 0x61, 0x72, 0x6b, 0x4e, 0x6f, 0x74, 0x69, 0x66,
	0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x41, 0x73, 0x52,
	0x65, 0x61, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x6d,
	0x73, 0x67, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6d, 0x73, 0x67, 0x22, 0x3c, 0x0a,
	0x1e, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x76, 0x65, 0x51, 0x75, 0x65, 0x73,
	0x74, 0x69, 0x6f, 0x6e, 0x45, 0x78, 0x61, 0x6d, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x12,
	0x1a, 0x0a, 0x08, 0x71, 0x75, 0x65, 0x73, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x08, 0x71, 0x75, 0x65, 0x73, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x59, 0x0a, 0x21, 0x4d,
	0x75, 0x6c, 0x74, 0x69, 0x70, 0x6c, 0x65, 0x43, 0x68, 0x6f, 0x69, 0x63, 0x65, 0x51, 0x75, 0x65,
	0x73, 0x74, 0x69, 0x6f, 0x6e, 0x45, 0x78, 0x61, 0x6d, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73,
	0x12, 0x1a, 0x0a, 0x08, 0x71, 0x75, 0x65, 0x73, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x08, 0x71, 0x75, 0x65, 0x73, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x18, 0x0a, 0x07,
	0x63, 0x68, 0x6f, 0x69, 0x63, 0x65, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x09, 0x52, 0x07, 0x63,
	0x68, 0x6f, 0x69, 0x63, 0x65, 0x73, 0x22, 0x3a, 0x0a, 0x20, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69,
	0x70, 0x74, 0x69, 0x76, 0x65, 0x51, 0x75, 0x65, 0x73, 0x74, 0x69, 0x6f, 0x6e, 0x41, 0x6e, 0x73,
	0x77, 0x65, 0x72, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x6e,
	0x73, 0x77, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x61, 0x6e, 0x73, 0x77,
	0x65, 0x72, 0x22, 0x3b, 0x0a, 0x23, 0x4d, 0x75, 0x6c, 0x74, 0x69, 0x70, 0x6c, 0x65, 0x43, 0x68,
	0x6f, 0x69, 0x63, 0x65, 0x51, 0x75, 0x65, 0x73, 0x74, 0x69, 0x6f, 0x6e, 0x41, 0x6e, 0x73, 0x77,
	0x65, 0x72, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x69, 0x6e, 0x64,
	0x65, 0x78, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x22,
	0x93, 0x03, 0x0a, 0x1e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x56, 0x61, 0x6c, 0x69, 0x64, 0x61,
	0x74, 0x6f, 0x72, 0x51, 0x75, 0x65, 0x73, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x49, 0x44, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x49, 0x44,
	0x12, 0x20, 0x0a, 0x0b, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x6f, 0x72, 0x49, 0x44, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0b, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x6f, 0x72,
	0x49, 0x44, 0x12, 0x20, 0x0a, 0x0b, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x65, 0x72, 0x49,
	0x44, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0b, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x65, 0x72, 0x49, 0x44, 0x12, 0x79, 0x0a, 0x1e, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74,
	0x69, 0x76, 0x65, 0x51, 0x75, 0x65, 0x73, 0x74, 0x69, 0x6f, 0x6e, 0x45, 0x78, 0x61, 0x6d, 0x44,
	0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2f, 0x2e, 0x4e,
	0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x72, 0x76, 0x2e, 0x44,
	0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x76, 0x65, 0x51, 0x75, 0x65, 0x73, 0x74, 0x69,
	0x6f, 0x6e, 0x45, 0x78, 0x61, 0x6d, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x48, 0x00, 0x52,
	0x1e, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x76, 0x65, 0x51, 0x75, 0x65, 0x73,
	0x74, 0x69, 0x6f, 0x6e, 0x45, 0x78, 0x61, 0x6d, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x12,
	0x82, 0x01, 0x0a, 0x21, 0x6d, 0x75, 0x6c, 0x74, 0x69, 0x70, 0x6c, 0x65, 0x43, 0x68, 0x6f, 0x69,
	0x63, 0x65, 0x51, 0x75, 0x65, 0x73, 0x74, 0x69, 0x6f, 0x6e, 0x45, 0x78, 0x61, 0x6d, 0x44, 0x65,
	0x74, 0x61, 0x69, 0x6c, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x32, 0x2e, 0x4e, 0x6f,
	0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x72, 0x76, 0x2e, 0x4d, 0x75,
	0x6c, 0x74, 0x69, 0x70, 0x6c, 0x65, 0x43, 0x68, 0x6f, 0x69, 0x63, 0x65, 0x51, 0x75, 0x65, 0x73,
	0x74, 0x69, 0x6f, 0x6e, 0x45, 0x78, 0x61, 0x6d, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x48,
	0x00, 0x52, 0x21, 0x6d, 0x75, 0x6c, 0x74, 0x69, 0x70, 0x6c, 0x65, 0x43, 0x68, 0x6f, 0x69, 0x63,
	0x65, 0x51, 0x75, 0x65, 0x73, 0x74, 0x69, 0x6f, 0x6e, 0x45, 0x78, 0x61, 0x6d, 0x44, 0x65, 0x74,
	0x61, 0x69, 0x6c, 0x73, 0x42, 0x0f, 0x0a, 0x0d, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x5f,
	0x6f, 0x6e, 0x65, 0x6f, 0x66, 0x22, 0x74, 0x0a, 0x23, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x42,
	0x75, 0x6c, 0x6b, 0x56, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x6f, 0x72, 0x51, 0x75, 0x65, 0x73,
	0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x4d, 0x0a, 0x09,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x2f, 0x2e, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x72,
	0x76, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x56, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x6f,
	0x72, 0x51, 0x75, 0x65, 0x73, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x52, 0x09, 0x71, 0x75, 0x65, 0x73, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x22, 0x26, 0x0a, 0x24, 0x43,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x42, 0x75, 0x6c, 0x6b, 0x56, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74,
	0x6f, 0x72, 0x51, 0x75, 0x65, 0x73, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x22, 0xe0, 0x02, 0x0a, 0x21, 0x53, 0x65, 0x74, 0x56, 0x61, 0x6c, 0x69, 0x64,
	0x61, 0x74, 0x6f, 0x72, 0x51, 0x75, 0x65, 0x73, 0x74, 0x69, 0x6f, 0x6e, 0x41, 0x6e, 0x73, 0x77,
	0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1e, 0x0a, 0x0a, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x44, 0x12, 0x7f, 0x0a, 0x20, 0x64, 0x65, 0x73,
	0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x76, 0x65, 0x51, 0x75, 0x65, 0x73, 0x74, 0x69, 0x6f, 0x6e,
	0x41, 0x6e, 0x73, 0x77, 0x65, 0x72, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x31, 0x2e, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x53, 0x72, 0x76, 0x2e, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x76,
	0x65, 0x51, 0x75, 0x65, 0x73, 0x74, 0x69, 0x6f, 0x6e, 0x41, 0x6e, 0x73, 0x77, 0x65, 0x72, 0x44,
	0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x48, 0x00, 0x52, 0x20, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69,
	0x70, 0x74, 0x69, 0x76, 0x65, 0x51, 0x75, 0x65, 0x73, 0x74, 0x69, 0x6f, 0x6e, 0x41, 0x6e, 0x73,
	0x77, 0x65, 0x72, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x12, 0x88, 0x01, 0x0a, 0x23, 0x6d,
	0x75, 0x6c, 0x74, 0x69, 0x70, 0x6c, 0x65, 0x43, 0x68, 0x6f, 0x69, 0x63, 0x65, 0x51, 0x75, 0x65,
	0x73, 0x74, 0x69, 0x6f, 0x6e, 0x41, 0x6e, 0x73, 0x77, 0x65, 0x72, 0x44, 0x65, 0x74, 0x61, 0x69,
	0x6c, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x34, 0x2e, 0x4e, 0x6f, 0x74, 0x69, 0x66,
	0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x72, 0x76, 0x2e, 0x4d, 0x75, 0x6c, 0x74, 0x69,
	0x70, 0x6c, 0x65, 0x43, 0x68, 0x6f, 0x69, 0x63, 0x65, 0x51, 0x75, 0x65, 0x73, 0x74, 0x69, 0x6f,
	0x6e, 0x41, 0x6e, 0x73, 0x77, 0x65, 0x72, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x48, 0x00,
	0x52, 0x23, 0x6d, 0x75, 0x6c, 0x74, 0x69, 0x70, 0x6c, 0x65, 0x43, 0x68, 0x6f, 0x69, 0x63, 0x65,
	0x51, 0x75, 0x65, 0x73, 0x74, 0x69, 0x6f, 0x6e, 0x41, 0x6e, 0x73, 0x77, 0x65, 0x72, 0x44, 0x65,
	0x74, 0x61, 0x69, 0x6c, 0x73, 0x42, 0x0f, 0x0a, 0x0d, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x5f, 0x6f, 0x6e, 0x65, 0x6f, 0x66, 0x22, 0x36, 0x0a, 0x22, 0x53, 0x65, 0x74, 0x56, 0x61, 0x6c,
	0x69, 0x64, 0x61, 0x74, 0x6f, 0x72, 0x51, 0x75, 0x65, 0x73, 0x74, 0x69, 0x6f, 0x6e, 0x41, 0x6e,
	0x73, 0x77, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x10, 0x0a, 0x03,
	0x6d, 0x73, 0x67, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6d, 0x73, 0x67, 0x22, 0x2c,
	0x0a, 0x1a, 0x47, 0x65, 0x74, 0x51, 0x75, 0x65, 0x73, 0x74, 0x69, 0x6f, 0x6e, 0x45, 0x78, 0x61,
	0x6d, 0x42, 0x79, 0x49, 0x44, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x22, 0x8e, 0x03, 0x0a,
	0x1b, 0x47, 0x65, 0x74, 0x51, 0x75, 0x65, 0x73, 0x74, 0x69, 0x6f, 0x6e, 0x45, 0x78, 0x61, 0x6d,
	0x42, 0x79, 0x49, 0x44, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1e, 0x0a, 0x0a,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0a, 0x71, 0x75, 0x65, 0x73, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x44, 0x12, 0x1c, 0x0a, 0x09,
	0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x49, 0x44, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x09, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x49, 0x44, 0x12, 0x20, 0x0a, 0x0b, 0x72, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x65, 0x72, 0x49, 0x44, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x0b, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x65, 0x72, 0x49, 0x44, 0x12, 0x79, 0x0a, 0x1e,
	0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x76, 0x65, 0x51, 0x75, 0x65, 0x73, 0x74,
	0x69, 0x6f, 0x6e, 0x45, 0x78, 0x61, 0x6d, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x2f, 0x2e, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x53, 0x72, 0x76, 0x2e, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69,
	0x76, 0x65, 0x51, 0x75, 0x65, 0x73, 0x74, 0x69, 0x6f, 0x6e, 0x45, 0x78, 0x61, 0x6d, 0x44, 0x65,
	0x74, 0x61, 0x69, 0x6c, 0x73, 0x48, 0x00, 0x52, 0x1e, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70,
	0x74, 0x69, 0x76, 0x65, 0x51, 0x75, 0x65, 0x73, 0x74, 0x69, 0x6f, 0x6e, 0x45, 0x78, 0x61, 0x6d,
	0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x12, 0x82, 0x01, 0x0a, 0x21, 0x6d, 0x75, 0x6c, 0x74,
	0x69, 0x70, 0x6c, 0x65, 0x43, 0x68, 0x6f, 0x69, 0x63, 0x65, 0x51, 0x75, 0x65, 0x73, 0x74, 0x69,
	0x6f, 0x6e, 0x45, 0x78, 0x61, 0x6d, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x32, 0x2e, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x53, 0x72, 0x76, 0x2e, 0x4d, 0x75, 0x6c, 0x74, 0x69, 0x70, 0x6c, 0x65, 0x43, 0x68,
	0x6f, 0x69, 0x63, 0x65, 0x51, 0x75, 0x65, 0x73, 0x74, 0x69, 0x6f, 0x6e, 0x45, 0x78, 0x61, 0x6d,
	0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x48, 0x00, 0x52, 0x21, 0x6d, 0x75, 0x6c, 0x74, 0x69,
	0x70, 0x6c, 0x65, 0x43, 0x68, 0x6f, 0x69, 0x63, 0x65, 0x51, 0x75, 0x65, 0x73, 0x74, 0x69, 0x6f,
	0x6e, 0x45, 0x78, 0x61, 0x6d, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x42, 0x0f, 0x0a, 0x0d,
	0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x5f, 0x6f, 0x6e, 0x65, 0x6f, 0x66, 0x2a, 0x2a, 0x0a,
	0x12, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x12, 0x08, 0x0a, 0x04, 0x52, 0x65, 0x61, 0x64, 0x10, 0x00, 0x12, 0x0a, 0x0a,
	0x06, 0x55, 0x6e, 0x52, 0x65, 0x61, 0x64, 0x10, 0x01, 0x32, 0xb2, 0x09, 0x0a, 0x0f, 0x4e, 0x6f,
	0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x72, 0x76, 0x12, 0x8a, 0x01,
	0x0a, 0x1b, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x65,
	0x72, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x33, 0x2e,
	0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x72, 0x76, 0x2e,
	0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x65, 0x72, 0x4e,
	0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x34, 0x2e, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x53, 0x72, 0x76, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x65, 0x72, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x8a, 0x01, 0x0a, 0x1b, 0x43,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x56, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x6f, 0x72, 0x4e, 0x6f,
	0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x33, 0x2e, 0x4e, 0x6f, 0x74,
	0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x72, 0x76, 0x2e, 0x43, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x56, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x6f, 0x72, 0x4e, 0x6f, 0x74, 0x69,
	0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x34, 0x2e, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x72,
	0x76, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x56, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x6f,
	0x72, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x96, 0x01, 0x0a, 0x1f, 0x43, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x42, 0x75, 0x6c, 0x6b, 0x56, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x6f, 0x72, 0x4e,
	0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x37, 0x2e, 0x4e, 0x6f,
	0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x72, 0x76, 0x2e, 0x43, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x42, 0x75, 0x6c, 0x6b, 0x56, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x6f,
	0x72, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x38, 0x2e, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x53, 0x72, 0x76, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x42, 0x75, 0x6c,
	0x6b, 0x56, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x6f, 0x72, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69,
	0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00,
	0x12, 0x84, 0x01, 0x0a, 0x19, 0x47, 0x65, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x65,
	0x72, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x31,
	0x2e, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x72, 0x76,
	0x2e, 0x47, 0x65, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x65, 0x72, 0x4e, 0x6f, 0x74,
	0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x32, 0x2e, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x53, 0x72, 0x76, 0x2e, 0x47, 0x65, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x65, 0x72,
	0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x84, 0x01, 0x0a, 0x19, 0x47, 0x65, 0x74, 0x56,
	0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x6f, 0x72, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x31, 0x2e, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x53, 0x72, 0x76, 0x2e, 0x47, 0x65, 0x74, 0x56, 0x61, 0x6c, 0x69, 0x64,
	0x61, 0x74, 0x6f, 0x72, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x32, 0x2e, 0x4e, 0x6f, 0x74, 0x69, 0x66,
	0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x72, 0x76, 0x2e, 0x47, 0x65, 0x74, 0x56, 0x61,
	0x6c, 0x69, 0x64, 0x61, 0x74, 0x6f, 0x72, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0xa5,
	0x01, 0x0a, 0x24, 0x47, 0x65, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x65, 0x72, 0x55,
	0x6e, 0x72, 0x65, 0x61, 0x64, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x73, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x3c, 0x2e, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69,
	0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x72, 0x76, 0x2e, 0x47, 0x65, 0x74, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x65, 0x72, 0x55, 0x6e, 0x72, 0x65, 0x61, 0x64, 0x4e, 0x6f, 0x74, 0x69,
	0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x3d, 0x2e, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x53, 0x72, 0x76, 0x2e, 0x47, 0x65, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x65, 0x72, 0x55, 0x6e, 0x72, 0x65, 0x61, 0x64, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69,
	0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0xa5, 0x01, 0x0a, 0x24, 0x47, 0x65, 0x74, 0x56, 0x61,
	0x6c, 0x69, 0x64, 0x61, 0x74, 0x6f, 0x72, 0x55, 0x6e, 0x72, 0x65, 0x61, 0x64, 0x4e, 0x6f, 0x74,
	0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12,
	0x3c, 0x2e, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x72,
	0x76, 0x2e, 0x47, 0x65, 0x74, 0x56, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x6f, 0x72, 0x55, 0x6e,
	0x72, 0x65, 0x61, 0x64, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x73, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x3d, 0x2e,
	0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x72, 0x76, 0x2e,
	0x47, 0x65, 0x74, 0x56, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x6f, 0x72, 0x55, 0x6e, 0x72, 0x65,
	0x61, 0x64, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x43,
	0x6f, 0x75, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x8d,
	0x01, 0x0a, 0x1c, 0x4d, 0x61, 0x72, 0x6b, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x41, 0x73, 0x52, 0x65, 0x61, 0x64, 0x12,
	0x34, 0x2e, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x72,
	0x76, 0x2e, 0x4d, 0x61, 0x72, 0x6b, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x41, 0x73, 0x52, 0x65, 0x61, 0x64, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x35, 0x2e, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x53, 0x72, 0x76, 0x2e, 0x4d, 0x61, 0x72, 0x6b, 0x4e, 0x6f, 0x74, 0x69,
	0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x41, 0x73,
	0x52, 0x65, 0x61, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x32, 0x9b,
	0x03, 0x0a, 0x0b, 0x51, 0x75, 0x65, 0x73, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x72, 0x76, 0x12, 0x8d,
	0x01, 0x0a, 0x1c, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x42, 0x75, 0x6c, 0x6b, 0x56, 0x61, 0x6c,
	0x69, 0x64, 0x61, 0x74, 0x6f, 0x72, 0x51, 0x75, 0x65, 0x73, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12,
	0x34, 0x2e, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x72,
	0x76, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x42, 0x75, 0x6c, 0x6b, 0x56, 0x61, 0x6c, 0x69,
	0x64, 0x61, 0x74, 0x6f, 0x72, 0x51, 0x75, 0x65, 0x73, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x35, 0x2e, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x53, 0x72, 0x76, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x42, 0x75,
	0x6c, 0x6b, 0x56, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x6f, 0x72, 0x51, 0x75, 0x65, 0x73, 0x74,
	0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x87,
	0x01, 0x0a, 0x1a, 0x53, 0x65, 0x74, 0x56, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x6f, 0x72, 0x51,
	0x75, 0x65, 0x73, 0x74, 0x69, 0x6f, 0x6e, 0x41, 0x6e, 0x73, 0x77, 0x65, 0x72, 0x12, 0x32, 0x2e,
	0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x72, 0x76, 0x2e,
	0x53, 0x65, 0x74, 0x56, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x6f, 0x72, 0x51, 0x75, 0x65, 0x73,
	0x74, 0x69, 0x6f, 0x6e, 0x41, 0x6e, 0x73, 0x77, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x33, 0x2e, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x53, 0x72, 0x76, 0x2e, 0x53, 0x65, 0x74, 0x56, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x6f, 0x72,
	0x51, 0x75, 0x65, 0x73, 0x74, 0x69, 0x6f, 0x6e, 0x41, 0x6e, 0x73, 0x77, 0x65, 0x72, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x72, 0x0a, 0x13, 0x47, 0x65, 0x74, 0x51,
	0x75, 0x65, 0x73, 0x74, 0x69, 0x6f, 0x6e, 0x45, 0x78, 0x61, 0x6d, 0x42, 0x79, 0x49, 0x44, 0x12,
	0x2b, 0x2e, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x72,
	0x76, 0x2e, 0x47, 0x65, 0x74, 0x51, 0x75, 0x65, 0x73, 0x74, 0x69, 0x6f, 0x6e, 0x45, 0x78, 0x61,
	0x6d, 0x42, 0x79, 0x49, 0x44, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2c, 0x2e, 0x4e,
	0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x72, 0x76, 0x2e, 0x47,
	0x65, 0x74, 0x51, 0x75, 0x65, 0x73, 0x74, 0x69, 0x6f, 0x6e, 0x45, 0x78, 0x61, 0x6d, 0x42, 0x79,
	0x49, 0x44, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x42, 0x19, 0x5a, 0x17,
	0x2e, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x3b, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x53, 0x72, 0x76, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_proto_NotificationSrv_proto_rawDescOnce sync.Once
	file_proto_NotificationSrv_proto_rawDescData = file_proto_NotificationSrv_proto_rawDesc
)

func file_proto_NotificationSrv_proto_rawDescGZIP() []byte {
	file_proto_NotificationSrv_proto_rawDescOnce.Do(func() {
		file_proto_NotificationSrv_proto_rawDescData = protoimpl.X.CompressGZIP(file_proto_NotificationSrv_proto_rawDescData)
	})
	return file_proto_NotificationSrv_proto_rawDescData
}

var file_proto_NotificationSrv_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_proto_NotificationSrv_proto_msgTypes = make([]protoimpl.MessageInfo, 36)
var file_proto_NotificationSrv_proto_goTypes = []interface{}{
	(NotificationStatus)(0),                              // 0: NotificationSrv.NotificationStatus
	(*StoredNotification)(nil),                           // 1: NotificationSrv.StoredNotification
	(*AdminAskQuestionDetails)(nil),                      // 2: NotificationSrv.AdminAskQuestionDetails
	(*RequestRejectedDetails)(nil),                       // 3: NotificationSrv.RequestRejectedDetails
	(*RequestApprovedDetails)(nil),                       // 4: NotificationSrv.RequestApprovedDetails
	(*ValidatorQuestionsDetails)(nil),                    // 5: NotificationSrv.ValidatorQuestionsDetails
	(*CreateRequesterNotificationRequest)(nil),           // 6: NotificationSrv.CreateRequesterNotificationRequest
	(*CreateRequesterNotificationResponse)(nil),          // 7: NotificationSrv.CreateRequesterNotificationResponse
	(*CreateBulkValidatorNotificationResponse)(nil),      // 8: NotificationSrv.CreateBulkValidatorNotificationResponse
	(*NearRequestFoundDetails)(nil),                      // 9: NotificationSrv.NearRequestFoundDetails
	(*ElectedAsValidatorDetails)(nil),                    // 10: NotificationSrv.ElectedAsValidatorDetails
	(*RequesterRespondToValidatorDetails)(nil),           // 11: NotificationSrv.RequesterRespondToValidatorDetails
	(*CreateValidatorNotificationRequest)(nil),           // 12: NotificationSrv.CreateValidatorNotificationRequest
	(*CreateBulkValidatorNotificationRequest)(nil),       // 13: NotificationSrv.CreateBulkValidatorNotificationRequest
	(*CreateValidatorNotificationResponse)(nil),          // 14: NotificationSrv.CreateValidatorNotificationResponse
	(*Notification)(nil),                                 // 15: NotificationSrv.Notification
	(*GetRequesterNotificationsRequest)(nil),             // 16: NotificationSrv.GetRequesterNotificationsRequest
	(*GetRequesterNotificationsResponse)(nil),            // 17: NotificationSrv.GetRequesterNotificationsResponse
	(*GetValidatorNotificationsRequest)(nil),             // 18: NotificationSrv.GetValidatorNotificationsRequest
	(*GetValidatorNotificationsResponse)(nil),            // 19: NotificationSrv.GetValidatorNotificationsResponse
	(*GetRequesterUnreadNotificationsCountRequest)(nil),  // 20: NotificationSrv.GetRequesterUnreadNotificationsCountRequest
	(*GetRequesterUnreadNotificationsCountResponse)(nil), // 21: NotificationSrv.GetRequesterUnreadNotificationsCountResponse
	(*GetValidatorUnreadNotificationsCountRequest)(nil),  // 22: NotificationSrv.GetValidatorUnreadNotificationsCountRequest
	(*GetValidatorUnreadNotificationsCountResponse)(nil), // 23: NotificationSrv.GetValidatorUnreadNotificationsCountResponse
	(*MarkNotificationStatusAsReadRequest)(nil),          // 24: NotificationSrv.MarkNotificationStatusAsReadRequest
	(*MarkNotificationStatusAsReadResponse)(nil),         // 25: NotificationSrv.MarkNotificationStatusAsReadResponse
	(*DescriptiveQuestionExamDetails)(nil),               // 26: NotificationSrv.DescriptiveQuestionExamDetails
	(*MultipleChoiceQuestionExamDetails)(nil),            // 27: NotificationSrv.MultipleChoiceQuestionExamDetails
	(*DescriptiveQuestionAnswerDetails)(nil),             // 28: NotificationSrv.DescriptiveQuestionAnswerDetails
	(*MultipleChoiceQuestionAnswerDetails)(nil),          // 29: NotificationSrv.MultipleChoiceQuestionAnswerDetails
	(*CreateValidatorQuestionRequest)(nil),               // 30: NotificationSrv.CreateValidatorQuestionRequest
	(*CreateBulkValidatorQuestionsRequest)(nil),          // 31: NotificationSrv.CreateBulkValidatorQuestionsRequest
	(*CreateBulkValidatorQuestionsResponse)(nil),         // 32: NotificationSrv.CreateBulkValidatorQuestionsResponse
	(*SetValidatorQuestionAnswerRequest)(nil),            // 33: NotificationSrv.SetValidatorQuestionAnswerRequest
	(*SetValidatorQuestionAnswerResponse)(nil),           // 34: NotificationSrv.SetValidatorQuestionAnswerResponse
	(*GetQuestionExamByIDRequest)(nil),                   // 35: NotificationSrv.GetQuestionExamByIDRequest
	(*GetQuestionExamByIDResponse)(nil),                  // 36: NotificationSrv.GetQuestionExamByIDResponse
	(*timestamp.Timestamp)(nil),                          // 37: google.protobuf.Timestamp
}
var file_proto_NotificationSrv_proto_depIdxs = []int32{
	37, // 0: NotificationSrv.RequestRejectedDetails.time:type_name -> google.protobuf.Timestamp
	37, // 1: NotificationSrv.RequestApprovedDetails.time:type_name -> google.protobuf.Timestamp
	2,  // 2: NotificationSrv.CreateRequesterNotificationRequest.adminAskQuestionDetails:type_name -> NotificationSrv.AdminAskQuestionDetails
	3,  // 3: NotificationSrv.CreateRequesterNotificationRequest.requestRejectedDetails:type_name -> NotificationSrv.RequestRejectedDetails
	4,  // 4: NotificationSrv.CreateRequesterNotificationRequest.requestApprovedDetails:type_name -> NotificationSrv.RequestApprovedDetails
	5,  // 5: NotificationSrv.CreateRequesterNotificationRequest.validatorQuestionsDetails:type_name -> NotificationSrv.ValidatorQuestionsDetails
	1,  // 6: NotificationSrv.RequesterRespondToValidatorDetails.StoredNotifications:type_name -> NotificationSrv.StoredNotification
	9,  // 7: NotificationSrv.CreateValidatorNotificationRequest.nearRequestFoundDetails:type_name -> NotificationSrv.NearRequestFoundDetails
	10, // 8: NotificationSrv.CreateValidatorNotificationRequest.electedAsValidatorDetails:type_name -> NotificationSrv.ElectedAsValidatorDetails
	11, // 9: NotificationSrv.CreateValidatorNotificationRequest.requesterRespondToValidatorDetails:type_name -> NotificationSrv.RequesterRespondToValidatorDetails
	12, // 10: NotificationSrv.CreateBulkValidatorNotificationRequest.createValidatorNotificationRequest:type_name -> NotificationSrv.CreateValidatorNotificationRequest
	0,  // 11: NotificationSrv.Notification.status:type_name -> NotificationSrv.NotificationStatus
	2,  // 12: NotificationSrv.Notification.adminAskQuestionDetails:type_name -> NotificationSrv.AdminAskQuestionDetails
	3,  // 13: NotificationSrv.Notification.requestRejectedDetails:type_name -> NotificationSrv.RequestRejectedDetails
	4,  // 14: NotificationSrv.Notification.requestApprovedDetails:type_name -> NotificationSrv.RequestApprovedDetails
	5,  // 15: NotificationSrv.Notification.validatorQuestionsDetails:type_name -> NotificationSrv.ValidatorQuestionsDetails
	9,  // 16: NotificationSrv.Notification.nearRequestFoundDetails:type_name -> NotificationSrv.NearRequestFoundDetails
	10, // 17: NotificationSrv.Notification.electedAsValidatorDetails:type_name -> NotificationSrv.ElectedAsValidatorDetails
	11, // 18: NotificationSrv.Notification.requesterRespondToValidatorDetails:type_name -> NotificationSrv.RequesterRespondToValidatorDetails
	15, // 19: NotificationSrv.GetRequesterNotificationsResponse.notifications:type_name -> NotificationSrv.Notification
	15, // 20: NotificationSrv.GetValidatorNotificationsResponse.notifications:type_name -> NotificationSrv.Notification
	26, // 21: NotificationSrv.CreateValidatorQuestionRequest.descriptiveQuestionExamDetails:type_name -> NotificationSrv.DescriptiveQuestionExamDetails
	27, // 22: NotificationSrv.CreateValidatorQuestionRequest.multipleChoiceQuestionExamDetails:type_name -> NotificationSrv.MultipleChoiceQuestionExamDetails
	30, // 23: NotificationSrv.CreateBulkValidatorQuestionsRequest.questions:type_name -> NotificationSrv.CreateValidatorQuestionRequest
	28, // 24: NotificationSrv.SetValidatorQuestionAnswerRequest.descriptiveQuestionAnswerDetails:type_name -> NotificationSrv.DescriptiveQuestionAnswerDetails
	29, // 25: NotificationSrv.SetValidatorQuestionAnswerRequest.multipleChoiceQuestionAnswerDetails:type_name -> NotificationSrv.MultipleChoiceQuestionAnswerDetails
	26, // 26: NotificationSrv.GetQuestionExamByIDResponse.descriptiveQuestionExamDetails:type_name -> NotificationSrv.DescriptiveQuestionExamDetails
	27, // 27: NotificationSrv.GetQuestionExamByIDResponse.multipleChoiceQuestionExamDetails:type_name -> NotificationSrv.MultipleChoiceQuestionExamDetails
	6,  // 28: NotificationSrv.NotificationSrv.CreateRequesterNotification:input_type -> NotificationSrv.CreateRequesterNotificationRequest
	12, // 29: NotificationSrv.NotificationSrv.CreateValidatorNotification:input_type -> NotificationSrv.CreateValidatorNotificationRequest
	13, // 30: NotificationSrv.NotificationSrv.CreateBulkValidatorNotification:input_type -> NotificationSrv.CreateBulkValidatorNotificationRequest
	16, // 31: NotificationSrv.NotificationSrv.GetRequesterNotifications:input_type -> NotificationSrv.GetRequesterNotificationsRequest
	18, // 32: NotificationSrv.NotificationSrv.GetValidatorNotifications:input_type -> NotificationSrv.GetValidatorNotificationsRequest
	20, // 33: NotificationSrv.NotificationSrv.GetRequesterUnreadNotificationsCount:input_type -> NotificationSrv.GetRequesterUnreadNotificationsCountRequest
	22, // 34: NotificationSrv.NotificationSrv.GetValidatorUnreadNotificationsCount:input_type -> NotificationSrv.GetValidatorUnreadNotificationsCountRequest
	24, // 35: NotificationSrv.NotificationSrv.MarkNotificationStatusAsRead:input_type -> NotificationSrv.MarkNotificationStatusAsReadRequest
	31, // 36: NotificationSrv.QuestionSrv.CreateBulkValidatorQuestions:input_type -> NotificationSrv.CreateBulkValidatorQuestionsRequest
	33, // 37: NotificationSrv.QuestionSrv.SetValidatorQuestionAnswer:input_type -> NotificationSrv.SetValidatorQuestionAnswerRequest
	35, // 38: NotificationSrv.QuestionSrv.GetQuestionExamByID:input_type -> NotificationSrv.GetQuestionExamByIDRequest
	7,  // 39: NotificationSrv.NotificationSrv.CreateRequesterNotification:output_type -> NotificationSrv.CreateRequesterNotificationResponse
	14, // 40: NotificationSrv.NotificationSrv.CreateValidatorNotification:output_type -> NotificationSrv.CreateValidatorNotificationResponse
	8,  // 41: NotificationSrv.NotificationSrv.CreateBulkValidatorNotification:output_type -> NotificationSrv.CreateBulkValidatorNotificationResponse
	17, // 42: NotificationSrv.NotificationSrv.GetRequesterNotifications:output_type -> NotificationSrv.GetRequesterNotificationsResponse
	19, // 43: NotificationSrv.NotificationSrv.GetValidatorNotifications:output_type -> NotificationSrv.GetValidatorNotificationsResponse
	21, // 44: NotificationSrv.NotificationSrv.GetRequesterUnreadNotificationsCount:output_type -> NotificationSrv.GetRequesterUnreadNotificationsCountResponse
	23, // 45: NotificationSrv.NotificationSrv.GetValidatorUnreadNotificationsCount:output_type -> NotificationSrv.GetValidatorUnreadNotificationsCountResponse
	25, // 46: NotificationSrv.NotificationSrv.MarkNotificationStatusAsRead:output_type -> NotificationSrv.MarkNotificationStatusAsReadResponse
	32, // 47: NotificationSrv.QuestionSrv.CreateBulkValidatorQuestions:output_type -> NotificationSrv.CreateBulkValidatorQuestionsResponse
	34, // 48: NotificationSrv.QuestionSrv.SetValidatorQuestionAnswer:output_type -> NotificationSrv.SetValidatorQuestionAnswerResponse
	36, // 49: NotificationSrv.QuestionSrv.GetQuestionExamByID:output_type -> NotificationSrv.GetQuestionExamByIDResponse
	39, // [39:50] is the sub-list for method output_type
	28, // [28:39] is the sub-list for method input_type
	28, // [28:28] is the sub-list for extension type_name
	28, // [28:28] is the sub-list for extension extendee
	0,  // [0:28] is the sub-list for field type_name
}

func init() { file_proto_NotificationSrv_proto_init() }
func file_proto_NotificationSrv_proto_init() {
	if File_proto_NotificationSrv_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_proto_NotificationSrv_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StoredNotification); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_NotificationSrv_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AdminAskQuestionDetails); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_NotificationSrv_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RequestRejectedDetails); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_NotificationSrv_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RequestApprovedDetails); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_NotificationSrv_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ValidatorQuestionsDetails); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_NotificationSrv_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateRequesterNotificationRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_NotificationSrv_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateRequesterNotificationResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_NotificationSrv_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateBulkValidatorNotificationResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_NotificationSrv_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NearRequestFoundDetails); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_NotificationSrv_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ElectedAsValidatorDetails); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_NotificationSrv_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RequesterRespondToValidatorDetails); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_NotificationSrv_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateValidatorNotificationRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_NotificationSrv_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateBulkValidatorNotificationRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_NotificationSrv_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateValidatorNotificationResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_NotificationSrv_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Notification); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_NotificationSrv_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetRequesterNotificationsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_NotificationSrv_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetRequesterNotificationsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_NotificationSrv_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetValidatorNotificationsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_NotificationSrv_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetValidatorNotificationsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_NotificationSrv_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetRequesterUnreadNotificationsCountRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_NotificationSrv_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetRequesterUnreadNotificationsCountResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_NotificationSrv_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetValidatorUnreadNotificationsCountRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_NotificationSrv_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetValidatorUnreadNotificationsCountResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_NotificationSrv_proto_msgTypes[23].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MarkNotificationStatusAsReadRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_NotificationSrv_proto_msgTypes[24].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MarkNotificationStatusAsReadResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_NotificationSrv_proto_msgTypes[25].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DescriptiveQuestionExamDetails); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_NotificationSrv_proto_msgTypes[26].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MultipleChoiceQuestionExamDetails); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_NotificationSrv_proto_msgTypes[27].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DescriptiveQuestionAnswerDetails); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_NotificationSrv_proto_msgTypes[28].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MultipleChoiceQuestionAnswerDetails); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_NotificationSrv_proto_msgTypes[29].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateValidatorQuestionRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_NotificationSrv_proto_msgTypes[30].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateBulkValidatorQuestionsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_NotificationSrv_proto_msgTypes[31].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateBulkValidatorQuestionsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_NotificationSrv_proto_msgTypes[32].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SetValidatorQuestionAnswerRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_NotificationSrv_proto_msgTypes[33].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SetValidatorQuestionAnswerResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_NotificationSrv_proto_msgTypes[34].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetQuestionExamByIDRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_NotificationSrv_proto_msgTypes[35].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetQuestionExamByIDResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_proto_NotificationSrv_proto_msgTypes[5].OneofWrappers = []interface{}{
		(*CreateRequesterNotificationRequest_AdminAskQuestionDetails)(nil),
		(*CreateRequesterNotificationRequest_RequestRejectedDetails)(nil),
		(*CreateRequesterNotificationRequest_RequestApprovedDetails)(nil),
		(*CreateRequesterNotificationRequest_ValidatorQuestionsDetails)(nil),
	}
	file_proto_NotificationSrv_proto_msgTypes[11].OneofWrappers = []interface{}{
		(*CreateValidatorNotificationRequest_NearRequestFoundDetails)(nil),
		(*CreateValidatorNotificationRequest_ElectedAsValidatorDetails)(nil),
		(*CreateValidatorNotificationRequest_RequesterRespondToValidatorDetails)(nil),
	}
	file_proto_NotificationSrv_proto_msgTypes[14].OneofWrappers = []interface{}{
		(*Notification_AdminAskQuestionDetails)(nil),
		(*Notification_RequestRejectedDetails)(nil),
		(*Notification_RequestApprovedDetails)(nil),
		(*Notification_ValidatorQuestionsDetails)(nil),
		(*Notification_NearRequestFoundDetails)(nil),
		(*Notification_ElectedAsValidatorDetails)(nil),
		(*Notification_RequesterRespondToValidatorDetails)(nil),
	}
	file_proto_NotificationSrv_proto_msgTypes[29].OneofWrappers = []interface{}{
		(*CreateValidatorQuestionRequest_DescriptiveQuestionExamDetails)(nil),
		(*CreateValidatorQuestionRequest_MultipleChoiceQuestionExamDetails)(nil),
	}
	file_proto_NotificationSrv_proto_msgTypes[32].OneofWrappers = []interface{}{
		(*SetValidatorQuestionAnswerRequest_DescriptiveQuestionAnswerDetails)(nil),
		(*SetValidatorQuestionAnswerRequest_MultipleChoiceQuestionAnswerDetails)(nil),
	}
	file_proto_NotificationSrv_proto_msgTypes[35].OneofWrappers = []interface{}{
		(*GetQuestionExamByIDResponse_DescriptiveQuestionExamDetails)(nil),
		(*GetQuestionExamByIDResponse_MultipleChoiceQuestionExamDetails)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_proto_NotificationSrv_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   36,
			NumExtensions: 0,
			NumServices:   2,
		},
		GoTypes:           file_proto_NotificationSrv_proto_goTypes,
		DependencyIndexes: file_proto_NotificationSrv_proto_depIdxs,
		EnumInfos:         file_proto_NotificationSrv_proto_enumTypes,
		MessageInfos:      file_proto_NotificationSrv_proto_msgTypes,
	}.Build()
	File_proto_NotificationSrv_proto = out.File
	file_proto_NotificationSrv_proto_rawDesc = nil
	file_proto_NotificationSrv_proto_goTypes = nil
	file_proto_NotificationSrv_proto_depIdxs = nil
}
